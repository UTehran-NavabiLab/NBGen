#include <systemc>
#include <uvm>
#include "vip/fi.h"
#include "vip/fi_signal_if.h"
#include "test_lib.h" 
#include "reg/ut_fault_registry.h"
#include "systemC_netlist.h"


using namespace sc_core;

SC_MODULE( testbench ) {

    Circuit432* dut;
    Circuit432* dut_ref;
    fi_signal_if* vif;
    ut_fault_registry* flt_reg;

    SC_HAS_PROCESS(testbench);
    testbench(sc_module_name _name){
        // Interface instantiation
        vif = new fi_signal_if("vif");
          assert(vif);
        // call function to read from file
        std::string input_vector_file = "test_vector.vec";
        // add streams of file to resource database
        // uvm::uvm_resource_db<std::string>::set("*", "input_vector_file", input_vector_file, this);
        uvm::uvm_config_db<std::string>::set(uvm::uvm_root::get(), "*", "input_vector_file", input_vector_file);
        // Add interface to configuration database
        uvm::uvm_config_db<fi_signal_if*>::set(uvm::uvm_root::get(), "*", "vif", vif);
        // Instantiate the DUT and bind ports to interface
        dut = new Circuit432("dut");
            dut->in4.bind(vif->add_and_bind("in4"));
            dut->in17.bind(vif->add_and_bind("in17"));
            dut->in30.bind(vif->add_and_bind("in30"));
            dut->in43.bind(vif->add_and_bind("in43"));
            dut->in56.bind(vif->add_and_bind("in56"));
            dut->in69.bind(vif->add_and_bind("in69"));
            dut->in82.bind(vif->add_and_bind("in82"));
            dut->in95.bind(vif->add_and_bind("in95"));
            dut->in108.bind(vif->add_and_bind("in108"));
            dut->in1.bind(vif->add_and_bind("in1"));
            dut->in11.bind(vif->add_and_bind("in11"));
            dut->in24.bind(vif->add_and_bind("in24"));
            dut->in37.bind(vif->add_and_bind("in37"));
            dut->in50.bind(vif->add_and_bind("in50"));
            dut->in63.bind(vif->add_and_bind("in63"));
            dut->in76.bind(vif->add_and_bind("in76"));
            dut->in89.bind(vif->add_and_bind("in89"));
            dut->in102.bind(vif->add_and_bind("in102"));
            dut->in8.bind(vif->add_and_bind("in8"));
            dut->in21.bind(vif->add_and_bind("in21"));
            dut->in34.bind(vif->add_and_bind("in34"));
            dut->in47.bind(vif->add_and_bind("in47"));
            dut->in60.bind(vif->add_and_bind("in60"));
            dut->in73.bind(vif->add_and_bind("in73"));
            dut->in86.bind(vif->add_and_bind("in86"));
            dut->in99.bind(vif->add_and_bind("in99"));
            dut->in112.bind(vif->add_and_bind("in112"));
            dut->in14.bind(vif->add_and_bind("in14"));
            dut->in27.bind(vif->add_and_bind("in27"));
            dut->in40.bind(vif->add_and_bind("in40"));
            dut->in53.bind(vif->add_and_bind("in53"));
            dut->in66.bind(vif->add_and_bind("in66"));
            dut->in79.bind(vif->add_and_bind("in79"));
            dut->in92.bind(vif->add_and_bind("in92"));
            dut->in105.bind(vif->add_and_bind("in105"));
            dut->in115.bind(vif->add_and_bind("in115"));
            dut->out223.bind(vif->add_and_bind("out223_mod"));
            dut->out329.bind(vif->add_and_bind("out329_mod"));
            dut->out370.bind(vif->add_and_bind("out370_mod"));
            dut->out421.bind(vif->add_and_bind("out421_mod"));
            dut->out430.bind(vif->add_and_bind("out430_mod"));
            dut->out431.bind(vif->add_and_bind("out431_mod"));
            dut->out432.bind(vif->add_and_bind("out432_mod"));
        // Instantiate the DUT and bind ports to interface
        dut_ref = new Circuit432("dut_ref");
            dut_ref->in4.bind(vif->get_signal("in4"));
            dut_ref->in17.bind(vif->get_signal("in17"));
            dut_ref->in30.bind(vif->get_signal("in30"));
            dut_ref->in43.bind(vif->get_signal("in43"));
            dut_ref->in56.bind(vif->get_signal("in56"));
            dut_ref->in69.bind(vif->get_signal("in69"));
            dut_ref->in82.bind(vif->get_signal("in82"));
            dut_ref->in95.bind(vif->get_signal("in95"));
            dut_ref->in108.bind(vif->get_signal("in108"));
            dut_ref->in1.bind(vif->get_signal("in1"));
            dut_ref->in11.bind(vif->get_signal("in11"));
            dut_ref->in24.bind(vif->get_signal("in24"));
            dut_ref->in37.bind(vif->get_signal("in37"));
            dut_ref->in50.bind(vif->get_signal("in50"));
            dut_ref->in63.bind(vif->get_signal("in63"));
            dut_ref->in76.bind(vif->get_signal("in76"));
            dut_ref->in89.bind(vif->get_signal("in89"));
            dut_ref->in102.bind(vif->get_signal("in102"));
            dut_ref->in8.bind(vif->get_signal("in8"));
            dut_ref->in21.bind(vif->get_signal("in21"));
            dut_ref->in34.bind(vif->get_signal("in34"));
            dut_ref->in47.bind(vif->get_signal("in47"));
            dut_ref->in60.bind(vif->get_signal("in60"));
            dut_ref->in73.bind(vif->get_signal("in73"));
            dut_ref->in86.bind(vif->get_signal("in86"));
            dut_ref->in99.bind(vif->get_signal("in99"));
            dut_ref->in112.bind(vif->get_signal("in112"));
            dut_ref->in14.bind(vif->get_signal("in14"));
            dut_ref->in27.bind(vif->get_signal("in27"));
            dut_ref->in40.bind(vif->get_signal("in40"));
            dut_ref->in53.bind(vif->get_signal("in53"));
            dut_ref->in66.bind(vif->get_signal("in66"));
            dut_ref->in79.bind(vif->get_signal("in79"));
            dut_ref->in92.bind(vif->get_signal("in92"));
            dut_ref->in105.bind(vif->get_signal("in105"));
            dut_ref->in115.bind(vif->get_signal("in115"));
            dut_ref->out223.bind(vif->add_and_bind("out223_ref"));
            dut_ref->out329.bind(vif->add_and_bind("out329_ref"));
            dut_ref->out370.bind(vif->add_and_bind("out370_ref"));
            dut_ref->out421.bind(vif->add_and_bind("out421_ref"));
            dut_ref->out430.bind(vif->add_and_bind("out430_ref"));
            dut_ref->out431.bind(vif->add_and_bind("out431_ref"));
            dut_ref->out432.bind(vif->add_and_bind("out432_ref"));
        // creating fault registration module
        flt_reg = new ut_fault_registry();
            flt_reg->add_object(dut->Ckt432_I_0);
            flt_reg->add_object(dut->Ckt432_I_1);
            flt_reg->add_object(dut->Ckt432_I_2);
            flt_reg->add_object(dut->Ckt432_I_3);
            flt_reg->add_object(dut->Ckt432_I_4);
            flt_reg->add_object(dut->Ckt432_I_5);
            flt_reg->add_object(dut->Ckt432_I_6);
            flt_reg->add_object(dut->Ckt432_I_7);
            flt_reg->add_object(dut->Ckt432_I_8);
            flt_reg->add_object(dut->Ckt432_M1_X1_0);
            flt_reg->add_object(dut->Ckt432_M1_X1_1);
            flt_reg->add_object(dut->Ckt432_M1_X1_2);
            flt_reg->add_object(dut->Ckt432_M1_X1_3);
            flt_reg->add_object(dut->Ckt432_M1_X1_4);
            flt_reg->add_object(dut->Ckt432_M1_X1_5);
            flt_reg->add_object(dut->Ckt432_M1_X1_6);
            flt_reg->add_object(dut->Ckt432_M1_X1_7);
            flt_reg->add_object(dut->Ckt432_M1_X1_8);
            flt_reg->add_object(dut->Ckt432_M1_n1);
            flt_reg->add_object(dut->Ckt432_M1_n10);
            flt_reg->add_object(dut->Ckt432_M1_n11);
            flt_reg->add_object(dut->Ckt432_M1_n12);
            flt_reg->add_object(dut->Ckt432_M1_n13);
            flt_reg->add_object(dut->Ckt432_M1_n14);
            flt_reg->add_object(dut->Ckt432_M1_n15);
            flt_reg->add_object(dut->Ckt432_M1_n2);
            flt_reg->add_object(dut->Ckt432_M1_n3);
            flt_reg->add_object(dut->Ckt432_M1_n4);
            flt_reg->add_object(dut->Ckt432_M1_n5);
            flt_reg->add_object(dut->Ckt432_M1_n6);
            flt_reg->add_object(dut->Ckt432_M1_n7);
            flt_reg->add_object(dut->Ckt432_M1_n8);
            flt_reg->add_object(dut->Ckt432_M1_n9);
            flt_reg->add_object(dut->Ckt432_M2_X2_0);
            flt_reg->add_object(dut->Ckt432_M2_X2_1);
            flt_reg->add_object(dut->Ckt432_M2_X2_2);
            flt_reg->add_object(dut->Ckt432_M2_X2_3);
            flt_reg->add_object(dut->Ckt432_M2_X2_4);
            flt_reg->add_object(dut->Ckt432_M2_X2_5);
            flt_reg->add_object(dut->Ckt432_M2_X2_6);
            flt_reg->add_object(dut->Ckt432_M2_X2_7);
            flt_reg->add_object(dut->Ckt432_M2_X2_8);
            flt_reg->add_object(dut->Ckt432_M2_n1);
            flt_reg->add_object(dut->Ckt432_M2_n10);
            flt_reg->add_object(dut->Ckt432_M2_n11);
            flt_reg->add_object(dut->Ckt432_M2_n12);
            flt_reg->add_object(dut->Ckt432_M2_n13);
            flt_reg->add_object(dut->Ckt432_M2_n14);
            flt_reg->add_object(dut->Ckt432_M2_n15);
            flt_reg->add_object(dut->Ckt432_M2_n16);
            flt_reg->add_object(dut->Ckt432_M2_n17);
            flt_reg->add_object(dut->Ckt432_M2_n18);
            flt_reg->add_object(dut->Ckt432_M2_n19);
            flt_reg->add_object(dut->Ckt432_M2_n2);
            flt_reg->add_object(dut->Ckt432_M2_n20);
            flt_reg->add_object(dut->Ckt432_M2_n3);
            flt_reg->add_object(dut->Ckt432_M2_n4);
            flt_reg->add_object(dut->Ckt432_M2_n5);
            flt_reg->add_object(dut->Ckt432_M2_n6);
            flt_reg->add_object(dut->Ckt432_M2_n7);
            flt_reg->add_object(dut->Ckt432_M2_n8);
            flt_reg->add_object(dut->Ckt432_M2_n9);
            flt_reg->add_object(dut->Ckt432_M3_n1);
            flt_reg->add_object(dut->Ckt432_M3_n10);
            flt_reg->add_object(dut->Ckt432_M3_n11);
            flt_reg->add_object(dut->Ckt432_M3_n12);
            flt_reg->add_object(dut->Ckt432_M3_n13);
            flt_reg->add_object(dut->Ckt432_M3_n14);
            flt_reg->add_object(dut->Ckt432_M3_n15);
            flt_reg->add_object(dut->Ckt432_M3_n16);
            flt_reg->add_object(dut->Ckt432_M3_n17);
            flt_reg->add_object(dut->Ckt432_M3_n18);
            flt_reg->add_object(dut->Ckt432_M3_n19);
            flt_reg->add_object(dut->Ckt432_M3_n2);
            flt_reg->add_object(dut->Ckt432_M3_n20);
            flt_reg->add_object(dut->Ckt432_M3_n3);
            flt_reg->add_object(dut->Ckt432_M3_n4);
            flt_reg->add_object(dut->Ckt432_M3_n5);
            flt_reg->add_object(dut->Ckt432_M3_n6);
            flt_reg->add_object(dut->Ckt432_M3_n7);
            flt_reg->add_object(dut->Ckt432_M3_n8);
            flt_reg->add_object(dut->Ckt432_M3_n9);
            flt_reg->add_object(dut->Ckt432_M4_n1);
            flt_reg->add_object(dut->Ckt432_M4_n10);
            flt_reg->add_object(dut->Ckt432_M4_n11);
            flt_reg->add_object(dut->Ckt432_M4_n12);
            flt_reg->add_object(dut->Ckt432_M4_n13);
            flt_reg->add_object(dut->Ckt432_M4_n14);
            flt_reg->add_object(dut->Ckt432_M4_n15);
            flt_reg->add_object(dut->Ckt432_M4_n16);
            flt_reg->add_object(dut->Ckt432_M4_n17);
            flt_reg->add_object(dut->Ckt432_M4_n18);
            flt_reg->add_object(dut->Ckt432_M4_n2);
            flt_reg->add_object(dut->Ckt432_M4_n3);
            flt_reg->add_object(dut->Ckt432_M4_n4);
            flt_reg->add_object(dut->Ckt432_M4_n5);
            flt_reg->add_object(dut->Ckt432_M4_n6);
            flt_reg->add_object(dut->Ckt432_M4_n7);
            flt_reg->add_object(dut->Ckt432_M4_n8);
            flt_reg->add_object(dut->Ckt432_M4_n9);
            flt_reg->add_object(dut->Ckt432_M5_n1);
            flt_reg->add_object(dut->Ckt432_M5_n2);
            flt_reg->add_object(dut->Ckt432_M5_n3);
            flt_reg->add_object(dut->Ckt432_M5_n4);
            flt_reg->add_object(dut->Ckt432_M5_n5);
            flt_reg->add_object(dut->Ckt432_M5_n6);
            flt_reg->add_object(dut->Ckt432_M5_n7);
            flt_reg->add_object(dut->Ckt432_M5_n8);
            flt_reg->add_object(dut->Ckt432_M5_n9);

        // group signals into two 
        vif->set_as_stimulated("in4");
        vif->set_as_stimulated("in17");
        vif->set_as_stimulated("in30");
        vif->set_as_stimulated("in43");
        vif->set_as_stimulated("in56");
        vif->set_as_stimulated("in69");
        vif->set_as_stimulated("in82");
        vif->set_as_stimulated("in95");
        vif->set_as_stimulated("in108");
        vif->set_as_stimulated("in1");
        vif->set_as_stimulated("in11");
        vif->set_as_stimulated("in24");
        vif->set_as_stimulated("in37");
        vif->set_as_stimulated("in50");
        vif->set_as_stimulated("in63");
        vif->set_as_stimulated("in76");
        vif->set_as_stimulated("in89");
        vif->set_as_stimulated("in102");
        vif->set_as_stimulated("in8");
        vif->set_as_stimulated("in21");
        vif->set_as_stimulated("in34");
        vif->set_as_stimulated("in47");
        vif->set_as_stimulated("in60");
        vif->set_as_stimulated("in73");
        vif->set_as_stimulated("in86");
        vif->set_as_stimulated("in99");
        vif->set_as_stimulated("in112");
        vif->set_as_stimulated("in14");
        vif->set_as_stimulated("in27");
        vif->set_as_stimulated("in40");
        vif->set_as_stimulated("in53");
        vif->set_as_stimulated("in66");
        vif->set_as_stimulated("in79");
        vif->set_as_stimulated("in92");
        vif->set_as_stimulated("in105");
        vif->set_as_stimulated("in115");
        vif->set_as_observable_mod("out223_mod");
        vif->set_as_observable_ref("out223_ref");
        vif->set_as_observable_mod("out329_mod");
        vif->set_as_observable_ref("out329_ref");
        vif->set_as_observable_mod("out370_mod");
        vif->set_as_observable_ref("out370_ref");
        vif->set_as_observable_mod("out421_mod");
        vif->set_as_observable_ref("out421_ref");
        vif->set_as_observable_mod("out430_mod");
        vif->set_as_observable_ref("out430_ref");
        vif->set_as_observable_mod("out431_mod");
        vif->set_as_observable_ref("out431_ref");
        vif->set_as_observable_mod("out432_mod");
        vif->set_as_observable_ref("out432_ref");

        // Add interface to configuration database
        uvm::uvm_config_db<ut_fault_registry*>::set(
          uvm::uvm_root::get(), "*", "flt_reg", flt_reg);
    }
};
