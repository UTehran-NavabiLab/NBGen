/* Generated by Yosys 0.29+23 (git sha1 cdeef5481, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

module register(NBART, Grst, clk, rst, A, B, C, Q1, Q2, Q3);
  input [3:0] A;
  input NBART;
	input Grst;
		wire _DRS0_;
	wire _DRS1_;
	wire _DRS2_;
	wire _DRS3_;
	wire _DRS4_;
	wire _DRS5_;
	wire _DRS6_;
	wire _DRS7_;
wire _MUX0_;
	wire _MUX1_;
	wire _MUX2_;
	wire _MUX3_;
	wire _MUX4_;
	wire _MUX5_;
	wire _MUX6_;
	wire _MUX7_;
wire [3:0] A;
  input [3:0] B;
  wire [3:0] B;
  input [3:0] C;
  wire [3:0] C;
  wire CK;
  output [3:0] Q1;
  wire [3:0] Q1;
  output [3:0] Q2;
  wire [3:0] Q2;
  output [3:0] Q3;
  wire [3:0] Q3;
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  wire _4_;
  wire _5_;
  wire [3:0] _6_;
  wire [3:0] _7_;
  input clk;
  wire clk;
  wire [3:0] cnt;
  input rst;
  wire rst;
  XOR2X1 _10_ (
    .A(cnt[0]),
    .B(cnt[1]),
    .Y(_7_[1])
  );
  NAND3X1 _11_ (
    .A(cnt[1]),
    .B(cnt[0]),
    .C(cnt[2]),
    .Y(_3_)
  );
  INVX1 _12_ (
    .A(_3_),
    .Y(_4_)
  );
  AOI21X1 _13_ (
    .A(cnt[1]),
    .B(cnt[0]),
    .C(cnt[2]),
    .Y(_5_)
  );
  NOR2X1 _14_ (
    .A(_5_),
    .B(_4_),
    .Y(_7_[2])
  );
  XNOR2X1 _15_ (
    .A(_3_),
    .B(cnt[3]),
    .Y(_7_[3])
  );
  NAND2X1 _16_ (
    .A(cnt[3]),
    .B(_4_),
    .Y(_1_)
  );
  INVX1 _17_ (
    .A(rst),
    .Y(_2_)
  );
  DFFSR _18_ (
   .CLK(_MUX0_),
    .D(C[0]),
    .Q(Q3[0]),
   .R(_DRS0_),
    .S(1'h1)
  );
  DFFSR _19_ (
   .CLK(_MUX1_),
    .D(C[1]),
    .Q(Q3[1]),
   .R(_DRS1_),
    .S(1'h1)
  );
  DFFSR _20_ (
   .CLK(_MUX2_),
    .D(C[2]),
    .Q(Q3[2]),
   .R(_DRS2_),
    .S(1'h1)
  );
  DFFSR _21_ (
   .CLK(_MUX3_),
    .D(C[3]),
    .Q(Q3[3]),
   .R(_DRS3_),
    .S(1'h1)
  );
  DFFSR _22_ (
    .CLK(clk),
    .D(B[0]),
    .Q(Q2[0]),
   .R(_DRS4_),
    .S(1'h1)
  );
  DFFSR _23_ (
    .CLK(clk),
    .D(B[1]),
    .Q(Q2[1]),
   .R(_DRS5_),
    .S(1'h1)
  );
  DFFSR _24_ (
    .CLK(clk),
    .D(B[2]),
    .Q(Q2[2]),
   .R(_DRS6_),
    .S(1'h1)
  );
  DFFSR _25_ (
    .CLK(clk),
    .D(B[3]),
    .Q(Q2[3]),
   .R(_DRS7_),
    .S(1'h1)
  );
  DFFSR _26_ (
    .CLK(clk),
    .D(_6_[0]),
    .Q(cnt[0]),
    .R(_2_),
    .S(1'h1)
  );
  DFFSR _27_ (
    .CLK(clk),
    .D(_7_[1]),
    .Q(cnt[1]),
    .R(_2_),
    .S(1'h1)
  );
  DFFSR _28_ (
    .CLK(clk),
    .D(_7_[2]),
    .Q(cnt[2]),
    .R(_2_),
    .S(1'h1)
  );
  DFFSR _29_ (
    .CLK(clk),
    .D(_7_[3]),
    .Q(cnt[3]),
    .R(_2_),
    .S(1'h1)
  );
  DFFSR _30_ (
   .CLK(_MUX4_),
    .D(A[0]),
    .Q(Q1[0]),
    .R(_2_),
    .S(1'h1)
  );
  DFFSR _31_ (
   .CLK(_MUX5_),
    .D(A[1]),
    .Q(Q1[1]),
    .R(_2_),
    .S(1'h1)
  );
  DFFSR _32_ (
   .CLK(_MUX6_),
    .D(A[2]),
    .Q(Q1[2]),
    .R(_2_),
    .S(1'h1)
  );
  DFFSR _33_ (
   .CLK(_MUX7_),
    .D(A[3]),
    .Q(Q1[3]),
    .R(_2_),
    .S(1'h1)
  );
  DFFSR _34_ (
    .CLK(clk),
    .D(_0_),
    .Q(CK),
    .R(_2_),
    .S(1'h1)
  );
  INVX1 _8_ (
    .A(cnt[0]),
    .Y(_6_[0])
  );
  INVX1 _9_ (
    .A(CK),
    .Y(_0_)
  );
  assign _6_[3:1] = cnt[3:1];
  assign _7_[0] = _6_[0];
assign _MUX0_ = (NBART) ? clk : CK ;
assign _MUX1_ = (NBART) ? clk : CK ;
assign _MUX2_ = (NBART) ? clk : CK ;
assign _MUX3_ = (NBART) ? clk : CK ;
assign _MUX4_ = (NBART) ? clk : CK ;
assign _MUX5_ = (NBART) ? clk : CK ;
assign _MUX6_ = (NBART) ? clk : CK ;
assign _MUX7_ = (NBART) ? clk : CK ;
assign _DRS0_ = NBART | _1_ ;
assign _DRS1_ = NBART | _1_ ;
assign _DRS2_ = NBART | _1_ ;
assign _DRS3_ = NBART | _1_ ;
assign _DRS4_ = NBART | _1_ ;
assign _DRS5_ = NBART | _1_ ;
assign _DRS6_ = NBART | _1_ ;
assign _DRS7_ = NBART | _1_ ;
endmodule
