/*******************************************************************************/
//	Filename:		Fibonacci_assembly.txt
//	Project:		PUNEH : Processor that is Useful and New for Education of Hardware
//  Version:		1.0
//	Created by: 	Ali Saber
//	Approved by:	
//	Date:			6 June 2021
//  Copyright (C) 2021 University of Teheran
//  This source file may be used and distributed without
//  restriction provided that this copyright statement is not
//  removed from the file and that any derivative work contains
//  the original copyright notice and the associated disclaimer.

//******************************************************************************/
//	File content description:
//	Fibonacci assembly code for the PUNEH processor                            
/*******************************************************************************/

	#define n 10
	#define a0 111
	#define a1 112
	#define t 113
	#define cntr 114
	#define pointer 115

	mem[0] = FA(LDm, -n+2);			
	mem[1] = FA(STa, cntr);
	mem[2] = FA(LDm, 128);			// results will store in mem[128] to mem[128+abs(n)]
	mem[3] = FA(STa, pointer);
	mem[4] = FA(LDm, 0);
	mem[5] = FA(STa, a0);
	mem[6] = FA(STn, pointer);
	mem[7] = FA(INa, pointer);
	mem[8] = FA(LDm, 1);
	mem[9] = FA(STa, a1);
	mem[10] = FA(STn, pointer);
	mem[11] = FA(INa, pointer);
	// loop:
	mem[12] = FA(LDa, a0);
	mem[13] = FA(ADa, a1);
	mem[14] = FA(STa, t);
	mem[15] = FA(STn, pointer);			
	mem[17] = FA(LDa, a1);
	mem[18] = FA(STa, a0);
	mem[19] = FA(LDa, t);
	mem[20] = FA(STa, a1);
	mem[21] = FA(INa, pointer);		
	mem[22] = FA(INa, cntr);	
	mem[23] = FA(LDa, cntr);
	mem[24] = FA(ADm, 0);
	mem[25] = NA(SKP, 0X8, 0X8); 		
	mem[26] = FA(JMa, 12);				