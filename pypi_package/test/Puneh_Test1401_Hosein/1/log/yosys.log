
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (open-tool-forge build) (git sha1 356ec7bb, clang 11.0.3 )


-- Executing script file `/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/yosys_script.ys' --

1. Executing Verilog-2005 frontend: /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v
Parsing Verilog input from `/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:86)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:87)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:91)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:92)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:94)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:95)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:110)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:110)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:111)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:536)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:562)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:597)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:626)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:644)
Generating RTLIL representation for module `\PUNEH_Top_Module'.
Generating RTLIL representation for module `\PUNEH_datapath'.
Generating RTLIL representation for module `\PUNEH_Controller'.
Note: Assuming pure combinatorial block at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223.2-468.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:470.3-524.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\mux2_to_1'.
Generating RTLIL representation for module `\LGU'.
Note: Assuming pure combinatorial block at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:549.2-564.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\IMM'.
Generating RTLIL representation for module `\mux4_to_1'.
Generating RTLIL representation for module `\register'.
Generating RTLIL representation for module `\Tristate'.
Generating RTLIL representation for module `\ARU'.
Generating RTLIL representation for module `\INC'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: INC                 
root of   0 design levels: ARU                 
root of   0 design levels: Tristate            
root of   0 design levels: register            
root of   0 design levels: mux4_to_1           
root of   0 design levels: IMM                 
root of   0 design levels: LGU                 
root of   0 design levels: mux2_to_1           
root of   0 design levels: PUNEH_Controller    
root of   1 design levels: PUNEH_datapath      
root of   2 design levels: PUNEH_Top_Module    
Automatically selected PUNEH_Top_Module as design top module.

2.2. Analyzing design hierarchy..
Top module:  \PUNEH_Top_Module
Used module:     \PUNEH_Controller
Used module:     \PUNEH_datapath
Used module:         \ARU
Used module:         \LGU
Used module:         \Tristate
Used module:         \IMM
Used module:         \INC
Used module:         \mux4_to_1
Used module:         \mux2_to_1
Used module:         \register
Parameter 1 (\N) = 4

2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\mux4_to_1'.
Parameter 1 (\N) = 4
Generating RTLIL representation for module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Parameter 1 (\N) = 2

2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2_to_1'.
Parameter 1 (\N) = 2
Generating RTLIL representation for module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Parameter 1 (\N) = 4

2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2_to_1'.
Parameter 1 (\N) = 4
Generating RTLIL representation for module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Parameter 1 (\N) = 16

2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\mux2_to_1'.
Parameter 1 (\N) = 16
Generating RTLIL representation for module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16
Found cached RTLIL representation for module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16

2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\mux4_to_1'.
Parameter 1 (\N) = 16
Generating RTLIL representation for module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16
Found cached RTLIL representation for module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16
Found cached RTLIL representation for module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16
Found cached RTLIL representation for module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16
Found cached RTLIL representation for module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16

2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter 1 (\N) = 16
Generating RTLIL representation for module `$paramod\register\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16
Found cached RTLIL representation for module `$paramod\register\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16
Found cached RTLIL representation for module `$paramod\register\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 16
Found cached RTLIL representation for module `$paramod\register\N=s32'00000000000000000000000000010000'.
Parameter 1 (\N) = 1

2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter 1 (\N) = 1
Generating RTLIL representation for module `$paramod\register\N=s32'00000000000000000000000000000001'.
Parameter 1 (\N) = 1
Found cached RTLIL representation for module `$paramod\register\N=s32'00000000000000000000000000000001'.
Parameter 1 (\N) = 1
Found cached RTLIL representation for module `$paramod\register\N=s32'00000000000000000000000000000001'.
Parameter 1 (\N) = 1
Found cached RTLIL representation for module `$paramod\register\N=s32'00000000000000000000000000000001'.
Parameter 1 (\N) = 4

2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\register'.
Parameter 1 (\N) = 4
Generating RTLIL representation for module `$paramod\register\N=s32'00000000000000000000000000000100'.

2.11. Analyzing design hierarchy..
Top module:  \PUNEH_Top_Module
Used module:     \PUNEH_Controller
Used module:     \PUNEH_datapath
Used module:         \ARU
Used module:         \LGU
Used module:         \Tristate
Used module:         \IMM
Used module:         \INC
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000010
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\register\N=s32'00000000000000000000000000010000
Used module:         $paramod\register\N=s32'00000000000000000000000000000001
Used module:         $paramod\register\N=s32'00000000000000000000000000000100

2.12. Analyzing design hierarchy..
Top module:  \PUNEH_Top_Module
Used module:     \PUNEH_Controller
Used module:     \PUNEH_datapath
Used module:         \ARU
Used module:         \LGU
Used module:         \Tristate
Used module:         \IMM
Used module:         \INC
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000010
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\register\N=s32'00000000000000000000000000010000
Used module:         $paramod\register\N=s32'00000000000000000000000000000001
Used module:         $paramod\register\N=s32'00000000000000000000000000000100
Removing unused module `\register'.
Removing unused module `\mux4_to_1'.
Removing unused module `\mux2_to_1'.
Removed 3 unused modules.
Mapping positional arguments of cell PUNEH_datapath.ARU1 (ARU).
Mapping positional arguments of cell PUNEH_datapath.LGU1 (LGU).
Mapping positional arguments of cell PUNEH_datapath.TriBuff (Tristate).
Mapping positional arguments of cell PUNEH_datapath.IMM1 (IMM).
Mapping positional arguments of cell PUNEH_datapath.INC_2 (INC).
Mapping positional arguments of cell PUNEH_datapath.INC_1 (INC).
Mapping positional arguments of cell PUNEH_datapath.mux10 ($paramod\mux4_to_1\N=s32'00000000000000000000000000000100).
Mapping positional arguments of cell PUNEH_datapath.mux9 ($paramod\mux2_to_1\N=s32'00000000000000000000000000000010).
Mapping positional arguments of cell PUNEH_datapath.mux8 ($paramod\mux2_to_1\N=s32'00000000000000000000000000000100).
Mapping positional arguments of cell PUNEH_datapath.mux7 ($paramod\mux2_to_1\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.mux6 ($paramod\mux2_to_1\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.mux5 ($paramod\mux4_to_1\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.mux4 ($paramod\mux4_to_1\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.mux3 ($paramod\mux2_to_1\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.mux2 ($paramod\mux4_to_1\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.mux1 ($paramod\mux4_to_1\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.IN ($paramod\register\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.PC ($paramod\register\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.IR ($paramod\register\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.AC ($paramod\register\N=s32'00000000000000000000000000010000).
Mapping positional arguments of cell PUNEH_datapath.SR_V ($paramod\register\N=s32'00000000000000000000000000000001).
Mapping positional arguments of cell PUNEH_datapath.SR_C ($paramod\register\N=s32'00000000000000000000000000000001).
Mapping positional arguments of cell PUNEH_datapath.SR_N ($paramod\register\N=s32'00000000000000000000000000000001).
Mapping positional arguments of cell PUNEH_datapath.SR_Z ($paramod\register\N=s32'00000000000000000000000000000001).
Mapping positional arguments of cell PUNEH_datapath.OF ($paramod\register\N=s32'00000000000000000000000000000100).
Mapping positional arguments of cell PUNEH_Top_Module.CU (PUNEH_Controller).
Mapping positional arguments of cell PUNEH_Top_Module.DP (PUNEH_datapath).

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \PUNEH_Top_Module
Used module:     \PUNEH_Controller
Used module:     \PUNEH_datapath
Used module:         \ARU
Used module:         \LGU
Used module:         \Tristate
Used module:         \IMM
Used module:         \INC
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000010
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\register\N=s32'00000000000000000000000000010000
Used module:         $paramod\register\N=s32'00000000000000000000000000000001
Used module:         $paramod\register\N=s32'00000000000000000000000000000100

3.1.2. Analyzing design hierarchy..
Top module:  \PUNEH_Top_Module
Used module:     \PUNEH_Controller
Used module:     \PUNEH_datapath
Used module:         \ARU
Used module:         \LGU
Used module:         \Tristate
Used module:         \IMM
Used module:         \INC
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000010
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\register\N=s32'00000000000000000000000000010000
Used module:         $paramod\register\N=s32'00000000000000000000000000000001
Used module:         $paramod\register\N=s32'00000000000000000000000000000100
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$82 in module $paramod\register\N=s32'00000000000000000000000000000100.
Marked 3 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$81 in module $paramod\register\N=s32'00000000000000000000000000000001.
Marked 5 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:549$19 in module LGU.
Marked 3 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$80 in module $paramod\register\N=s32'00000000000000000000000000010000.
Removed 1 dead cases from process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:470$15 in module PUNEH_Controller.
Marked 3 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:470$15 in module PUNEH_Controller.
Removed 1 dead cases from process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13 in module PUNEH_Controller.
Marked 6 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13 in module PUNEH_Controller.
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:217$12 in module PUNEH_Controller.
Removed a total of 2 dead cases.

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 51 assignments to connections.

3.2.4. Executing PROC_INIT pass (extract init attributes).

3.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `$paramod\register\N=s32'00000000000000000000000000000100.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$82'.
Found async reset \rst in `$paramod\register\N=s32'00000000000000000000000000000001.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$81'.
Found async reset \rst in `$paramod\register\N=s32'00000000000000000000000000010000.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$80'.
Found async reset \rst in `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:217$12'.

3.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\register\N=s32'00000000000000000000000000000100.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$82'.
     1/3: $3\dout[3:0]
     2/3: $2\dout[3:0]
     3/3: $1\dout[3:0]
Creating decoders for process `$paramod\register\N=s32'00000000000000000000000000000001.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$81'.
     1/3: $3\dout[0:0]
     2/3: $2\dout[0:0]
     3/3: $1\dout[0:0]
Creating decoders for process `\LGU.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:549$19'.
     1/5: $5\out[15:0]
     2/5: $4\out[15:0]
     3/5: $3\out[15:0]
     4/5: $2\out[15:0]
     5/5: $1\out[15:0]
Creating decoders for process `$paramod\register\N=s32'00000000000000000000000000010000.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$80'.
     1/3: $3\dout[15:0]
     2/3: $2\dout[15:0]
     3/3: $1\dout[15:0]
Creating decoders for process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:470$15'.
     1/3: $3\nstate[1:0]
     2/3: $2\nstate[1:0]
     3/3: $1\nstate[1:0]
Creating decoders for process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
     1/147: $6\ldPC[0:0]
     2/147: $6\selINC_PC[0:0]
     3/147: $6\INC1[0:0]
     4/147: $5\ldAC[0:0]
     5/147: $3\selMEM_AC[0:0]
     6/147: $3\readMEM[0:0]
     7/147: $2\selIN_ADR[0:0]
     8/147: $3\selARU_SR[0:0]
     9/147: $5\ADD[0:0]
    10/147: $3\conOF[0:0]
    11/147: $5\selARU_AC[0:0]
    12/147: $3\selIR_ADR[0:0]
    13/147: $3\selAC_MEM[0:0]
    14/147: $2\selIN_MEM[0:0]
    15/147: $3\selMO_ARU[0:0]
    16/147: $3\selMEM_LGU[0:0]
    17/147: $3\seldataBus[0:0]
    18/147: $5\ldSR[3:0]
    19/147: $3\writeMEM[0:0]
    20/147: $5\ldPC[0:0]
    21/147: $5\selINC_PC[0:0]
    22/147: $4\INC2[0:0]
    23/147: $5\INC1[0:0]
    24/147: $4\ldPC[0:0]
    25/147: $4\selINC_PC[0:0]
    26/147: $4\INC1[0:0]
    27/147: $4\ldOF[0:0]
    28/147: $4\selPC_OF[0:0]
    29/147: $4\selLGU_SR[0:0]
    30/147: $4\ADD[0:0]
    31/147: $4\NOT[0:0]
    32/147: $4\LSB0E[0:0]
    33/147: $4\selLGU_AC[0:0]
    34/147: $4\selARU_AC[0:0]
    35/147: $4\selIMM_PC[0:0]
    36/147: $4\sel1_ARU[0:0]
    37/147: $4\zeroAC[0:0]
    38/147: $4\ldAC[0:0]
    39/147: $4\ldSR[3:0]
    40/147: $3\ldPC[0:0]
    41/147: $3\selINC_PC[0:0]
    42/147: $3\INC1[0:0]
    43/147: $3\ldOF[0:0]
    44/147: $3\selIMM_OF[0:0]
    45/147: $3\SE12bits[0:0]
    46/147: $3\selLGU_SR[0:0]
    47/147: $3\INC2[0:0]
    48/147: $3\selSET_SR[0:0]
    49/147: $3\ADD[0:0]
    50/147: $3\NOT[0:0]
    51/147: $3\LSB0E[0:0]
    52/147: $3\selLGU_AC[0:0]
    53/147: $3\selARU_AC[0:0]
    54/147: $3\selIMM_PC[0:0]
    55/147: $3\sel1_ARU[0:0]
    56/147: $3\selIMM_LGU[0:0]
    57/147: $3\selPC_OF[0:0]
    58/147: $3\zeroAC[0:0]
    59/147: $3\ldAC[0:0]
    60/147: $3\SHF[1:0]
    61/147: $3\ldSR[3:0]
    62/147: $2\ldPC[0:0]
    63/147: $2\selINC_PC[0:0]
    64/147: $2\INC1[0:0]
    65/147: $2\ldAC[0:0]
    66/147: $2\selIMM_AC[0:0]
    67/147: $2\SE4bits[0:0]
    68/147: $2\selLGU_SR[0:0]
    69/147: $2\selARU_SR[0:0]
    70/147: $2\INC2[0:0]
    71/147: $2\selINC_IN[0:0]
    72/147: $2\selSET_SR[0:0]
    73/147: $2\MUL[0:0]
    74/147: $2\ADD[0:0]
    75/147: $2\NOT[0:0]
    76/147: $2\AND[0:0]
    77/147: $2\LSB0E[0:0]
    78/147: $2\SE12bits[0:0]
    79/147: $2\conOF[0:0]
    80/147: $2\selLGU_AC[0:0]
    81/147: $2\selARU_AC[0:0]
    82/147: $2\selMEM_AC[0:0]
    83/147: $2\selIR_ADR[0:0]
    84/147: $2\selAC_MEM[0:0]
    85/147: $2\selPC_MEM[0:0]
    86/147: $2\selIMM_PC[0:0]
    87/147: $2\selMEM_PC[0:0]
    88/147: $2\selMO_ARU[0:0]
    89/147: $2\sel1_ARU[0:0]
    90/147: $2\selMEM_LGU[0:0]
    91/147: $2\selIMM_LGU[0:0]
    92/147: $2\selMEM_IN[0:0]
    93/147: $2\selIMM_OF[0:0]
    94/147: $2\selPC_OF[0:0]
    95/147: $2\seldataBus[0:0]
    96/147: $2\zeroAC[0:0]
    97/147: $2\ldIN[0:0]
    98/147: $2\ldOF[0:0]
    99/147: $2\SHF[1:0]
   100/147: $2\ldSR[3:0]
   101/147: $2\readMEM[0:0]
   102/147: $2\writeMEM[0:0]
   103/147: $1\readMEM[0:0]
   104/147: $1\ldIR[0:0]
   105/147: $1\selPC_ADR[0:0]
   106/147: $1\selLGU_SR[0:0]
   107/147: $1\selARU_SR[0:0]
   108/147: $1\INC2[0:0]
   109/147: $1\INC1[0:0]
   110/147: $1\selINC_IN[0:0]
   111/147: $1\selSET_SR[0:0]
   112/147: $1\MUL[0:0]
   113/147: $1\ADD[0:0]
   114/147: $1\NOT[0:0]
   115/147: $1\AND[0:0]
   116/147: $1\LSB0E[0:0]
   117/147: $1\SE4bits[0:0]
   118/147: $1\SE12bits[0:0]
   119/147: $1\conOF[0:0]
   120/147: $1\selLGU_AC[0:0]
   121/147: $1\selARU_AC[0:0]
   122/147: $1\selMEM_AC[0:0]
   123/147: $1\selIMM_AC[0:0]
   124/147: $1\selIR_ADR[0:0]
   125/147: $1\selIN_ADR[0:0]
   126/147: $1\selAC_MEM[0:0]
   127/147: $1\selPC_MEM[0:0]
   128/147: $1\selIN_MEM[0:0]
   129/147: $1\selIMM_PC[0:0]
   130/147: $1\selMEM_PC[0:0]
   131/147: $1\selINC_PC[0:0]
   132/147: $1\selMO_ARU[0:0]
   133/147: $1\sel1_ARU[0:0]
   134/147: $1\selMEM_LGU[0:0]
   135/147: $1\selIMM_LGU[0:0]
   136/147: $1\selMEM_IN[0:0]
   137/147: $1\selIMM_OF[0:0]
   138/147: $1\selPC_OF[0:0]
   139/147: $1\seldataBus[0:0]
   140/147: $1\zeroAC[0:0]
   141/147: $1\ldAC[0:0]
   142/147: $1\ldIN[0:0]
   143/147: $1\ldPC[0:0]
   144/147: $1\ldOF[0:0]
   145/147: $1\SHF[1:0]
   146/147: $1\ldSR[3:0]
   147/147: $1\writeMEM[0:0]
Creating decoders for process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:217$12'.
     1/1: $0\pstate[1:0]

3.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\LGU.\out' from process `\LGU.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:549$19'.
No latch inferred for signal `\PUNEH_Controller.\nstate' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:470$15'.
No latch inferred for signal `\PUNEH_Controller.\writeMEM' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\readMEM' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\ldSR' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\SHF' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\ldIR' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\ldOF' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\ldPC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\ldIN' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\ldAC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\zeroAC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\seldataBus' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selPC_OF' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selIMM_OF' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selMEM_IN' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selIMM_LGU' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selMEM_LGU' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\sel1_ARU' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selMO_ARU' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selINC_PC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selMEM_PC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selIMM_PC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selIN_MEM' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selIR_MEM' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selPC_MEM' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selAC_MEM' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selIN_ADR' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selIR_ADR' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selPC_ADR' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selIMM_AC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selMEM_AC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selARU_AC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selLGU_AC' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\conOF' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\SE12bits' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\SE4bits' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\LSB0E' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\AND' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\NOT' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\ADD' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\MUL' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selSET_SR' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selINC_IN' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\INC1' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\INC2' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selARU_SR' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
No latch inferred for signal `\PUNEH_Controller.\selLGU_SR' from process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.

3.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\register\N=s32'00000000000000000000000000000100.\dout' using process `$paramod\register\N=s32'00000000000000000000000000000100.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$82'.
  created $adff cell `$procdff$2029' with positive edge clock and positive level reset.
Creating register for signal `$paramod\register\N=s32'00000000000000000000000000000001.\dout' using process `$paramod\register\N=s32'00000000000000000000000000000001.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$81'.
  created $adff cell `$procdff$2030' with positive edge clock and positive level reset.
Creating register for signal `$paramod\register\N=s32'00000000000000000000000000010000.\dout' using process `$paramod\register\N=s32'00000000000000000000000000010000.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$80'.
  created $adff cell `$procdff$2031' with positive edge clock and positive level reset.
Creating register for signal `\PUNEH_Controller.\pstate' using process `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:217$12'.
  created $adff cell `$procdff$2032' with positive edge clock and positive level reset.

3.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod\register\N=s32'00000000000000000000000000000100.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$82'.
Removing empty process `$paramod\register\N=s32'00000000000000000000000000000100.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$82'.
Found and cleaned up 2 empty switches in `$paramod\register\N=s32'00000000000000000000000000000001.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$81'.
Removing empty process `$paramod\register\N=s32'00000000000000000000000000000001.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$81'.
Found and cleaned up 5 empty switches in `\LGU.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:549$19'.
Removing empty process `LGU.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:549$19'.
Found and cleaned up 2 empty switches in `$paramod\register\N=s32'00000000000000000000000000010000.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$80'.
Removing empty process `$paramod\register\N=s32'00000000000000000000000000010000.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:609$80'.
Found and cleaned up 3 empty switches in `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:470$15'.
Removing empty process `PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:470$15'.
Found and cleaned up 6 empty switches in `\PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
Removing empty process `PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:223$13'.
Removing empty process `PUNEH_Controller.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:217$12'.
Cleaned up 20 empty switches.

3.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module INC.
Optimizing module ARU.
<suppressed ~1 debug messages>
Optimizing module Tristate.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module IMM.
Optimizing module LGU.
<suppressed ~3 debug messages>
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module PUNEH_Controller.
<suppressed ~54 debug messages>
Optimizing module PUNEH_datapath.
Optimizing module PUNEH_Top_Module.

3.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module INC.
Optimizing module ARU.
Optimizing module Tristate.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module IMM.
Optimizing module LGU.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_datapath.
Optimizing module PUNEH_Top_Module.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \Tristate..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \PUNEH_Top_Module..
Removed 0 unused cells and 321 unused wires.
<suppressed ~23 debug messages>

3.5. Executing CHECK pass (checking for obvious problems).
Checking module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010...
Checking module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100...
Checking module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000...
Checking module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100...
Checking module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000...
Checking module $paramod\register\N=s32'00000000000000000000000000000001...
Checking module $paramod\register\N=s32'00000000000000000000000000000100...
Checking module $paramod\register\N=s32'00000000000000000000000000010000...
Checking module ARU...
Checking module IMM...
Checking module INC...
Checking module LGU...
Checking module PUNEH_Controller...
Checking module PUNEH_Top_Module...
Checking module PUNEH_datapath...
Checking module Tristate...
Found and reported 0 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
<suppressed ~2898 debug messages>
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 966 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$96.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$87.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$150.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$105.
    dead port 1/2 on $mux $procmux$108.
    dead port 1/2 on $mux $procmux$111.
    dead port 1/2 on $mux $procmux$114.
    dead port 1/2 on $mux $procmux$120.
    dead port 1/2 on $mux $procmux$123.
    dead port 1/2 on $mux $procmux$126.
    dead port 1/2 on $mux $procmux$132.
    dead port 1/2 on $mux $procmux$135.
    dead port 1/2 on $mux $procmux$141.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1489.
    dead port 2/2 on $mux $procmux$299.
    dead port 2/2 on $mux $procmux$307.
    dead port 2/2 on $mux $procmux$174.
    dead port 2/2 on $mux $procmux$314.
    dead port 2/2 on $mux $procmux$321.
    dead port 2/2 on $mux $procmux$1741.
    dead port 2/2 on $mux $procmux$330.
    dead port 2/2 on $mux $procmux$337.
    dead port 2/2 on $mux $procmux$346.
    dead port 2/2 on $mux $procmux$1573.
    dead port 2/2 on $mux $procmux$354.
    dead port 2/2 on $mux $procmux$356.
    dead port 2/2 on $mux $procmux$358.
    dead port 2/2 on $mux $procmux$366.
    dead port 2/2 on $mux $procmux$1657.
    dead port 2/2 on $mux $procmux$368.
    dead port 2/2 on $mux $procmux$370.
    dead port 2/2 on $mux $procmux$379.
    dead port 2/2 on $mux $procmux$1300.
    dead port 2/2 on $mux $procmux$381.
    dead port 2/2 on $mux $procmux$383.
    dead port 2/2 on $mux $procmux$392.
    dead port 2/2 on $mux $procmux$394.
    dead port 2/2 on $mux $procmux$1090.
    dead port 2/2 on $mux $procmux$396.
    dead port 2/2 on $mux $procmux$412.
    dead port 2/2 on $mux $procmux$414.
    dead port 2/2 on $mux $procmux$416.
    dead port 2/2 on $mux $procmux$432.
    dead port 2/2 on $mux $procmux$1426.
    dead port 2/2 on $mux $procmux$434.
    dead port 2/2 on $mux $procmux$436.
    dead port 2/2 on $mux $procmux$452.
    dead port 2/2 on $mux $procmux$454.
    dead port 2/2 on $mux $procmux$456.
    dead port 2/2 on $mux $procmux$1363.
    dead port 2/2 on $mux $procmux$473.
    dead port 2/2 on $mux $procmux$475.
    dead port 2/2 on $mux $procmux$477.
    dead port 2/2 on $mux $procmux$494.
    dead port 2/2 on $mux $procmux$496.
    dead port 2/2 on $mux $procmux$498.
    dead port 2/2 on $mux $procmux$513.
    dead port 2/2 on $mux $procmux$1762.
    dead port 2/2 on $mux $procmux$515.
    dead port 2/2 on $mux $procmux$517.
    dead port 2/2 on $mux $procmux$530.
    dead port 2/2 on $mux $procmux$532.
    dead port 2/2 on $mux $procmux$534.
    dead port 2/2 on $mux $procmux$548.
    dead port 2/2 on $mux $procmux$550.
    dead port 2/2 on $mux $procmux$1510.
    dead port 2/2 on $mux $procmux$552.
    dead port 2/2 on $mux $procmux$1258.
    dead port 2/2 on $mux $procmux$568.
    dead port 2/2 on $mux $procmux$570.
    dead port 2/2 on $mux $procmux$572.
    dead port 2/2 on $mux $procmux$1594.
    dead port 2/2 on $mux $procmux$1678.
    dead port 2/2 on $mux $procmux$586.
    dead port 2/2 on $mux $procmux$1132.
    dead port 2/2 on $mux $procmux$588.
    dead port 2/2 on $mux $procmux$590.
    dead port 2/2 on $mux $procmux$603.
    dead port 2/2 on $mux $procmux$605.
    dead port 2/2 on $mux $procmux$607.
    dead port 2/2 on $mux $procmux$623.
    dead port 2/2 on $mux $procmux$625.
    dead port 2/2 on $mux $procmux$627.
    dead port 2/2 on $mux $procmux$1069.
    dead port 2/2 on $mux $procmux$640.
    dead port 2/2 on $mux $procmux$1216.
    dead port 2/2 on $mux $procmux$642.
    dead port 2/2 on $mux $procmux$644.
    dead port 2/2 on $mux $procmux$1174.
    dead port 2/2 on $mux $procmux$1783.
    dead port 2/2 on $mux $procmux$659.
    dead port 2/2 on $mux $procmux$661.
    dead port 2/2 on $mux $procmux$663.
    dead port 2/2 on $mux $procmux$1447.
    dead port 2/2 on $mux $procmux$677.
    dead port 2/2 on $mux $procmux$1321.
    dead port 2/2 on $mux $procmux$679.
    dead port 2/2 on $mux $procmux$681.
    dead port 2/2 on $mux $procmux$197.
    dead port 2/2 on $mux $procmux$696.
    dead port 2/2 on $mux $procmux$698.
    dead port 2/2 on $mux $procmux$700.
    dead port 2/2 on $mux $procmux$1384.
    dead port 2/2 on $mux $procmux$709.
    dead port 2/2 on $mux $procmux$711.
    dead port 2/2 on $mux $procmux$1531.
    dead port 2/2 on $mux $procmux$720.
    dead port 2/2 on $mux $procmux$722.
    dead port 2/2 on $mux $procmux$1699.
    dead port 2/2 on $mux $procmux$731.
    dead port 2/2 on $mux $procmux$733.
    dead port 2/2 on $mux $procmux$746.
    dead port 2/2 on $mux $procmux$1615.
    dead port 2/2 on $mux $procmux$748.
    dead port 2/2 on $mux $procmux$761.
    dead port 2/2 on $mux $procmux$763.
    dead port 2/2 on $mux $procmux$775.
    dead port 2/2 on $mux $procmux$777.
    dead port 2/2 on $mux $procmux$1804.
    dead port 2/2 on $mux $procmux$789.
    dead port 2/2 on $mux $procmux$791.
    dead port 2/2 on $mux $procmux$799.
    dead port 2/2 on $mux $procmux$801.
    dead port 2/2 on $mux $procmux$808.
    dead port 2/2 on $mux $procmux$810.
    dead port 2/2 on $mux $procmux$1048.
    dead port 2/2 on $mux $procmux$822.
    dead port 2/2 on $mux $procmux$824.
    dead port 2/2 on $mux $procmux$836.
    dead port 2/2 on $mux $procmux$1279.
    dead port 2/2 on $mux $procmux$838.
    dead port 2/2 on $mux $procmux$1111.
    dead port 2/2 on $mux $procmux$850.
    dead port 2/2 on $mux $procmux$1468.
    dead port 2/2 on $mux $procmux$852.
    dead port 2/2 on $mux $procmux$207.
    dead port 2/2 on $mux $procmux$182.
    dead port 2/2 on $mux $procmux$864.
    dead port 2/2 on $mux $procmux$866.
    dead port 2/2 on $mux $procmux$1027.
    dead port 2/2 on $mux $procmux$878.
    dead port 2/2 on $mux $procmux$1552.
    dead port 2/2 on $mux $procmux$880.
    dead port 2/2 on $mux $procmux$217.
    dead port 2/2 on $mux $procmux$1720.
    dead port 2/2 on $mux $procmux$892.
    dead port 2/2 on $mux $procmux$894.
    dead port 2/2 on $mux $procmux$1825.
    dead port 2/2 on $mux $procmux$1342.
    dead port 2/2 on $mux $procmux$906.
    dead port 2/2 on $mux $procmux$225.
    dead port 2/2 on $mux $procmux$908.
    dead port 2/2 on $mux $procmux$235.
    dead port 2/2 on $mux $procmux$919.
    dead port 2/2 on $mux $procmux$921.
    dead port 2/2 on $mux $procmux$1636.
    dead port 2/2 on $mux $procmux$933.
    dead port 2/2 on $mux $procmux$1405.
    dead port 2/2 on $mux $procmux$935.
    dead port 2/2 on $mux $procmux$243.
    dead port 2/2 on $mux $procmux$947.
    dead port 2/2 on $mux $procmux$949.
    dead port 2/2 on $mux $procmux$253.
    dead port 2/2 on $mux $procmux$961.
    dead port 2/2 on $mux $procmux$1237.
    dead port 2/2 on $mux $procmux$963.
    dead port 2/2 on $mux $procmux$260.
    dead port 2/2 on $mux $procmux$1153.
    dead port 2/2 on $mux $procmux$973.
    dead port 2/2 on $mux $procmux$975.
    dead port 2/2 on $mux $procmux$267.
    dead port 2/2 on $mux $procmux$983.
    dead port 2/2 on $mux $procmux$985.
    dead port 2/2 on $mux $procmux$275.
    dead port 2/2 on $mux $procmux$1195.
    dead port 2/2 on $mux $procmux$282.
    dead port 2/2 on $mux $procmux$1006.
    dead port 2/2 on $mux $procmux$290.
    dead port 2/2 on $mux $procmux$1846.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 179 multiplexer ports.
<suppressed ~58 debug messages>

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
    New ctrl vector for $pmux cell $procmux$1787: { $auto$opt_reduce.cc:134:opt_mux$2038 $auto$opt_reduce.cc:134:opt_mux$2036 $procmux$1015_CMP $auto$opt_reduce.cc:134:opt_mux$2034 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$674: $auto$opt_reduce.cc:134:opt_mux$2040
    New ctrl vector for $pmux cell $procmux$327: $auto$opt_reduce.cc:134:opt_mux$2042
    New ctrl vector for $pmux cell $procmux$191: $auto$opt_reduce.cc:134:opt_mux$2044
    New ctrl vector for $pmux cell $procmux$1451: { $procmux$1002_CMP $auto$opt_reduce.cc:134:opt_mux$2046 }
    New ctrl vector for $pmux cell $procmux$1577: { $auto$opt_reduce.cc:134:opt_mux$2050 $auto$opt_reduce.cc:134:opt_mux$2048 }
    New ctrl vector for $pmux cell $procmux$693: $auto$opt_reduce.cc:134:opt_mux$2052
    New ctrl vector for $pmux cell $procmux$1325: { $auto$opt_reduce.cc:134:opt_mux$2054 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1367: { $auto$opt_reduce.cc:134:opt_mux$2058 $auto$opt_reduce.cc:134:opt_mux$2056 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$706: { }
    New ctrl vector for $pmux cell $procmux$1178: { $procmux$1000_CMP $auto$opt_reduce.cc:134:opt_mux$2060 }
    New ctrl vector for $pmux cell $procmux$1388: { $auto$opt_reduce.cc:134:opt_mux$2064 $auto$opt_reduce.cc:134:opt_mux$2062 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$717: $procmux$413_CMP
    New ctrl vector for $pmux cell $procmux$1073: { $procmux$1005_CMP $auto$opt_reduce.cc:134:opt_mux$2066 }
    New ctrl vector for $pmux cell $procmux$510: $auto$opt_reduce.cc:134:opt_mux$2068
    New ctrl vector for $pmux cell $procmux$1535: { $auto$opt_reduce.cc:134:opt_mux$2072 $auto$opt_reduce.cc:134:opt_mux$2070 }
    New ctrl vector for $pmux cell $procmux$304: $auto$opt_reduce.cc:134:opt_mux$2074
    New ctrl vector for $pmux cell $procmux$1493: { $auto$opt_reduce.cc:134:opt_mux$2078 $auto$opt_reduce.cc:134:opt_mux$2076 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1703: { $auto$opt_reduce.cc:134:opt_mux$2080 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$770: $auto$opt_reduce.cc:134:opt_mux$2082
    New ctrl vector for $pmux cell $procmux$1619: { $auto$opt_reduce.cc:134:opt_mux$2086 $auto$opt_reduce.cc:134:opt_mux$2084 }
    New ctrl vector for $pmux cell $procmux$201: $auto$opt_reduce.cc:134:opt_mux$2088
    New ctrl vector for $pmux cell $procmux$1661: { $auto$opt_reduce.cc:134:opt_mux$2090 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1808: { $auto$opt_reduce.cc:134:opt_mux$2094 $auto$opt_reduce.cc:134:opt_mux$2092 }
    New ctrl vector for $pmux cell $procmux$1766: { $auto$opt_reduce.cc:134:opt_mux$2096 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1052: { $auto$opt_reduce.cc:134:opt_mux$2100 $auto$opt_reduce.cc:134:opt_mux$2098 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1745: { $auto$opt_reduce.cc:134:opt_mux$2102 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$343: $auto$opt_reduce.cc:134:opt_mux$2104
    New ctrl vector for $pmux cell $procmux$1283: { $auto$opt_reduce.cc:134:opt_mux$2108 $auto$opt_reduce.cc:134:opt_mux$2106 }
    New ctrl vector for $pmux cell $procmux$1304: { $auto$opt_reduce.cc:134:opt_mux$2110 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$859: { $procmux$413_CMP $auto$opt_reduce.cc:134:opt_mux$2112 }
    New ctrl vector for $pmux cell $procmux$1514: { $procmux$1013_CMP $auto$opt_reduce.cc:134:opt_mux$2114 }
    New ctrl vector for $pmux cell $procmux$1472: { $procmux$1012_CMP $auto$opt_reduce.cc:134:opt_mux$2116 }
    New ctrl vector for $pmux cell $procmux$211: $auto$opt_reduce.cc:134:opt_mux$2118
    New ctrl vector for $pmux cell $procmux$1010: { $auto$opt_reduce.cc:134:opt_mux$2122 $auto$opt_reduce.cc:134:opt_mux$2120 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1115: { $auto$opt_reduce.cc:134:opt_mux$2126 $auto$opt_reduce.cc:134:opt_mux$2124 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$222: $auto$opt_reduce.cc:134:opt_mux$2128
    New ctrl vector for $pmux cell $procmux$1598: { $auto$opt_reduce.cc:134:opt_mux$2132 $auto$opt_reduce.cc:134:opt_mux$2130 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1682: { $auto$opt_reduce.cc:134:opt_mux$2136 $auto$opt_reduce.cc:134:opt_mux$2134 }
    New ctrl vector for $pmux cell $procmux$1829: { $auto$opt_reduce.cc:134:opt_mux$2140 $auto$opt_reduce.cc:134:opt_mux$2138 }
    New ctrl vector for $pmux cell $procmux$915: $auto$opt_reduce.cc:134:opt_mux$2142
    New ctrl vector for $pmux cell $procmux$1724: { $auto$opt_reduce.cc:134:opt_mux$2146 $auto$opt_reduce.cc:134:opt_mux$2144 }
    New ctrl vector for $pmux cell $procmux$1262: { $auto$opt_reduce.cc:134:opt_mux$2148 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1556: { $auto$opt_reduce.cc:134:opt_mux$2150 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$240: $auto$opt_reduce.cc:134:opt_mux$2152
    New ctrl vector for $pmux cell $procmux$1136: { $auto$opt_reduce.cc:134:opt_mux$2156 $auto$opt_reduce.cc:134:opt_mux$2154 }
    New ctrl vector for $pmux cell $procmux$250: $auto$opt_reduce.cc:134:opt_mux$2158
    New ctrl vector for $pmux cell $procmux$1640: { $auto$opt_reduce.cc:134:opt_mux$2160 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$956: { $procmux$413_CMP $auto$opt_reduce.cc:134:opt_mux$2162 }
    New ctrl vector for $pmux cell $procmux$1409: { $procmux$1004_CMP $auto$opt_reduce.cc:134:opt_mux$2164 }
    New ctrl vector for $pmux cell $procmux$1094: { $auto$opt_reduce.cc:134:opt_mux$2168 $auto$opt_reduce.cc:134:opt_mux$2166 }
    New ctrl vector for $pmux cell $procmux$1346: { $auto$opt_reduce.cc:134:opt_mux$2172 $auto$opt_reduce.cc:134:opt_mux$2170 }
    New ctrl vector for $pmux cell $procmux$1430: { $auto$opt_reduce.cc:134:opt_mux$2176 $auto$opt_reduce.cc:134:opt_mux$2174 }
    New ctrl vector for $pmux cell $procmux$1241: { $auto$opt_reduce.cc:134:opt_mux$2180 $auto$opt_reduce.cc:134:opt_mux$2178 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1031: { $auto$opt_reduce.cc:134:opt_mux$2184 $auto$opt_reduce.cc:134:opt_mux$2182 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$989: { $auto$opt_reduce.cc:134:opt_mux$2188 $auto$opt_reduce.cc:134:opt_mux$2186 }
    New ctrl vector for $pmux cell $procmux$157: { $auto$opt_reduce.cc:134:opt_mux$2192 $auto$opt_reduce.cc:134:opt_mux$2190 }
    New ctrl vector for $pmux cell $procmux$1157: { $auto$opt_reduce.cc:134:opt_mux$2194 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1199: { $auto$opt_reduce.cc:134:opt_mux$2196 $procmux$1011_CMP }
    New ctrl vector for $pmux cell $procmux$1220: { $procmux$1015_CMP $auto$opt_reduce.cc:134:opt_mux$2198 }
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 60 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
<suppressed ~159 debug messages>
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 53 cells.

3.6.6. Executing OPT_DFF pass (perform DFF optimizations).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..
Removed 0 unused cells and 1196 unused wires.
<suppressed ~5 debug messages>

3.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.6.13. Executing OPT_DFF pass (perform DFF optimizations).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing FSM pass (extract and optimize FSM).

3.7.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking PUNEH_Controller.pstate as FSM state register:
    Circuit seems to be self-resetting.

3.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.8. Executing OPT pass (performing simple optimizations).

3.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

3.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 0 changes.

3.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$2030 ($adff) from module $paramod\register\N=s32'00000000000000000000000000000001 (D = $0\dout[0:0], Q = \dout).
Adding EN signal on $procdff$2029 ($adff) from module $paramod\register\N=s32'00000000000000000000000000000100 (D = $0\dout[3:0], Q = \dout).
Adding EN signal on $procdff$2031 ($adff) from module $paramod\register\N=s32'00000000000000000000000000010000 (D = $0\dout[15:0], Q = \dout).

3.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
<suppressed ~1 debug messages>
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
<suppressed ~1 debug messages>
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
<suppressed ~1 debug messages>
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.8.9. Rerunning OPT passes. (Maybe there is more to do..)

3.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

3.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 0 changes.

3.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.8.13. Executing OPT_DFF pass (perform DFF optimizations).

3.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.8.16. Finished OPT passes. (There is nothing left to do.)

3.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 14 bits (of 16) from mux cell $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:534$69 ($mux).
Removed top 14 bits (of 16) from mux cell $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:535$67 ($mux).
Removed top 14 bits (of 16) from wire $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:535$67_Y.
Removed top 12 bits (of 16) from mux cell $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:534$73 ($mux).
Removed top 12 bits (of 16) from mux cell $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:535$71 ($mux).
Removed top 12 bits (of 16) from wire $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:535$71_Y.
Removed top 12 bits (of 16) from mux cell $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:593$65 ($mux).
Removed top 12 bits (of 16) from mux cell $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:594$63 ($mux).
Removed top 12 bits (of 16) from mux cell $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:595$61 ($mux).
Removed top 12 bits (of 16) from mux cell $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:596$59 ($mux).
Removed top 12 bits (of 16) from wire $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:594$63_Y.
Removed top 12 bits (of 16) from wire $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:595$61_Y.
Removed top 12 bits (of 16) from wire $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:596$59_Y.
Removed cell $paramod\register\N=s32'00000000000000000000000000000001.$procmux$93 ($mux).
Removed cell $paramod\register\N=s32'00000000000000000000000000000100.$procmux$84 ($mux).
Removed cell $paramod\register\N=s32'00000000000000000000000000010000.$procmux$147 ($mux).
Removed top 1 bits (of 17) from port Y of cell ARU.$mul$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:643$43 ($mul).
Removed top 1 bits (of 17) from mux cell ARU.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:643$45 ($mux).
Removed top 1 bits (of 17) from wire ARU.$mul$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:643$43_Y.
Removed top 1 bits (of 17) from wire ARU.$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:643$45_Y.
Removed top 1 bits (of 2) from port B of cell LGU.$eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:557$26 ($eq).
Removed top 1 bits (of 2) from mux cell PUNEH_Controller.$procmux$180 ($mux).
Removed top 3 bits (of 4) from port B of cell PUNEH_Controller.$procmux$413_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell PUNEH_Controller.$procmux$431_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell PUNEH_Controller.$procmux$511_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell PUNEH_Controller.$procmux$512_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PUNEH_Controller.$procmux$771_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell PUNEH_Controller.$procmux$772_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell PUNEH_Controller.$procmux$773_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PUNEH_Controller.$procmux$807_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PUNEH_Controller.$procmux$1000_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PUNEH_Controller.$procmux$1001_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell PUNEH_Controller.$procmux$1002_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell PUNEH_Controller.$procmux$1003_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell PUNEH_Controller.$procmux$1004_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell PUNEH_Controller.$procmux$1007_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PUNEH_Controller.$procmux$1019_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell PUNEH_Controller.$procmux$1020_CMP0 ($eq).
Removed top 1 bits (of 2) from wire PUNEH_Controller.$2\nstate[1:0].

3.10. Executing PEEPOPT pass (run peephole optimizers).

3.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..
Removed 0 unused cells and 14 unused wires.
<suppressed ~8 debug messages>

3.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\register\N=s32'00000000000000000000000000000001:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\register\N=s32'00000000000000000000000000000100:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\register\N=s32'00000000000000000000000000010000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module ARU:
  creating $macc model for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:642$42 ($add).
  creating $macc model for $mul$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:643$43 ($mul).
  creating $alu model for $macc $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:642$42.
  creating $macc cell for $mul$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:643$43: $auto$alumacc.cc:365:replace_macc$2216
  creating $alu cell for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:642$42: $auto$alumacc.cc:485:replace_alu$2217
  created 1 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module IMM:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module INC:
  creating $macc model for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:662$57 ($add).
  creating $alu model for $macc $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:662$57.
  creating $alu cell for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:662$57: $auto$alumacc.cc:485:replace_alu$2220
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module LGU:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module PUNEH_Controller:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module PUNEH_Top_Module:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module PUNEH_datapath:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Tristate:
  created 0 $alu and 0 $macc cells.

3.13. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module LGU that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:556$25 ($sshr):
    Found 1 activation_patterns using ctrl signal { $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:555$24_Y \NOT \AND }.
    No candidates found.
  Analyzing resource sharing options for $shr$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:558$27 ($shr):
    Found 1 activation_patterns using ctrl signal { $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:557$26_Y $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:555$24_Y \NOT \AND }.
    No candidates found.
  Analyzing resource sharing options for $shl$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:560$29 ($shl):
    Found 1 activation_patterns using ctrl signal { $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:559$28_Y $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:557$26_Y $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:555$24_Y \NOT \AND }.
    No candidates found.

3.14. Executing OPT pass (performing simple optimizations).

3.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

3.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 0 changes.

3.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.14.6. Executing OPT_DFF pass (perform DFF optimizations).

3.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.14.9. Finished OPT passes. (There is nothing left to do.)

3.15. Executing MEMORY pass.

3.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

3.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

3.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

3.15.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

3.15.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.15.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.15.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

3.15.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.15.9. Executing MEMORY_COLLECT pass (generating $mem cells).

3.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
<suppressed ~1 debug messages>
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
<suppressed ~1 debug messages>
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
<suppressed ~1 debug messages>
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
<suppressed ~1 debug messages>
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
<suppressed ~1 debug messages>
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
<suppressed ~1 debug messages>
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
<suppressed ~1 debug messages>
Optimizing module PUNEH_Controller.
<suppressed ~124 debug messages>
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.
<suppressed ~1 debug messages>

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.17.3. Executing OPT_DFF pass (perform DFF optimizations).

3.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..
Removed 17 unused cells and 47 unused wires.
<suppressed ~25 debug messages>

3.17.5. Finished fast OPT passes.

3.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
    Consolidated identical input bits for $mux cell $ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:582$32:
      Old ports: A=16'0000000000000000, B={ \in1 12'000000000000 }, Y=$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:582$32_Y
      New ports: A=4'0000, B=\in1, Y=$ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:582$32_Y [15:12]
      New connections: $ternary$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/PUNEH_Top_Module.v:582$32_Y [11:0] = 12'000000000000
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
    Consolidated identical input bits for $mux cell $procmux$157:
      Old ports: A=2'10, B=2'00, Y=$3\nstate[1:0]
      New ports: A=1'1, B=1'0, Y=$3\nstate[1:0] [1]
      New connections: $3\nstate[1:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$335:
      Old ports: A=4'0000, B=4'1111, Y=$5\ldSR[3:0]
      New ports: A=1'0, B=1'1, Y=$5\ldSR[3:0] [0]
      New connections: $5\ldSR[3:0] [3:1] = { $5\ldSR[3:0] [0] $5\ldSR[3:0] [0] $5\ldSR[3:0] [0] }
    Consolidated identical input bits for $mux cell $procmux$693:
      Old ports: A=4'0000, B=4'1100, Y=$4\ldSR[3:0]
      New ports: A=1'0, B=1'1, Y=$4\ldSR[3:0] [2]
      New connections: { $4\ldSR[3:0] [3] $4\ldSR[3:0] [1:0] } = { $4\ldSR[3:0] [2] 2'00 }
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 4 changes.

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.19.6. Executing OPT_SHARE pass.

3.19.7. Executing OPT_DFF pass (perform DFF optimizations).

3.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
<suppressed ~3 debug messages>
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.19.10. Rerunning OPT passes. (Maybe there is more to do..)

3.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

3.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 0 changes.

3.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.19.14. Executing OPT_SHARE pass.

3.19.15. Executing OPT_DFF pass (perform DFF optimizations).

3.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.19.18. Rerunning OPT passes. (Maybe there is more to do..)

3.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

3.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 0 changes.

3.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

3.19.22. Executing OPT_SHARE pass.

3.19.23. Executing OPT_DFF pass (perform DFF optimizations).

3.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

3.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.19.26. Finished OPT passes. (There is nothing left to do.)

3.20. Executing TECHMAP pass (map to technology primitives).

3.20.1. Executing Verilog-2005 frontend: /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/utdate/bin/../share/yosys/techmap.v
Parsing Verilog input from `/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/utdate/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xnor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$constmap:00a5b8c078faac2d9dcf7d1311e85cfd31359fcf$paramod$8a12a9b73c8be786cf67ebac28abcbbf644a3888\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:00a5b8c078faac2d9dcf7d1311e85cfd31359fcf$paramod$496331829aefb119414a356f7c057ceca61fe3b9\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:00a5b8c078faac2d9dcf7d1311e85cfd31359fcf$paramod$fa076b6af7fb8a08bee97dc1cadb4ea9d925e7bd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$cc01eb4b12ca3a903e6a730e12703045df75a1af\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using extmapper maccmap for cells of type $macc.
  add \in0 [7:0] * \in1 [7:0] (8x8 bits, unsigned)
Using template $paramod$081ba1a4a7201ecdb44563d3c3bd7013d1ebf4eb\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010000 for cells of type $fa.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_bool.
No more expansions possible.
<suppressed ~1790 debug messages>

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
<suppressed ~410 debug messages>
Optimizing module IMM.
Optimizing module INC.
<suppressed ~84 debug messages>
Optimizing module LGU.
<suppressed ~34 debug messages>
Optimizing module PUNEH_Controller.
<suppressed ~159 debug messages>
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
<suppressed ~30 debug messages>
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
<suppressed ~114 debug messages>
Finding identical cells in module `\PUNEH_Controller'.
<suppressed ~882 debug messages>
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 342 cells.

3.21.3. Executing OPT_DFF pass (perform DFF optimizations).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..
Removed 61 unused cells and 834 unused wires.
<suppressed ~68 debug messages>

3.21.5. Finished fast OPT passes.

3.22. Executing ABC pass (technology mapping using ABC).

3.22.1. Extracting gate netlist of module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 7 wires to a netlist network with 5 inputs and 2 outputs.

3.22.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

3.22.2. Extracting gate netlist of module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 13 wires to a netlist network with 9 inputs and 4 outputs.

3.22.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.2.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        4
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        4
Removing temp directory.

3.22.3. Extracting gate netlist of module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000' to `<abc-temp-dir>/input.blif'..
Extracted 16 gates and 49 wires to a netlist network with 33 inputs and 16 outputs.

3.22.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.3.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       16
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       16
Removing temp directory.

3.22.4. Extracting gate netlist of module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100' to `<abc-temp-dir>/input.blif'..
Extracted 12 gates and 31 wires to a netlist network with 19 inputs and 4 outputs.

3.22.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.4.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       12
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:        4
Removing temp directory.

3.22.5. Extracting gate netlist of module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000' to `<abc-temp-dir>/input.blif'..
Extracted 48 gates and 115 wires to a netlist network with 67 inputs and 16 outputs.

3.22.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.5.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       48
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       67
ABC RESULTS:          output signals:       16
Removing temp directory.

3.22.6. Extracting gate netlist of module `$paramod\register\N=s32'00000000000000000000000000000001' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.22.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.6.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        2
Removing temp directory.

3.22.7. Extracting gate netlist of module `$paramod\register\N=s32'00000000000000000000000000000100' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 5 outputs.

3.22.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.7.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        5
Removing temp directory.

3.22.8. Extracting gate netlist of module `$paramod\register\N=s32'00000000000000000000000000010000' to `<abc-temp-dir>/input.blif'..
Extracted 17 gates and 36 wires to a netlist network with 18 inputs and 17 outputs.

3.22.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.8.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:                OR cells:        1
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       17
Removing temp directory.

3.22.9. Extracting gate netlist of module `\ARU' to `<abc-temp-dir>/input.blif'..
Extracted 489 gates and 523 wires to a netlist network with 33 inputs and 19 outputs.

3.22.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       57
ABC RESULTS:            ANDNOT cells:      129
ABC RESULTS:               MUX cells:       17
ABC RESULTS:              NAND cells:       31
ABC RESULTS:               NOR cells:       33
ABC RESULTS:               NOT cells:       16
ABC RESULTS:                OR cells:       66
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              XNOR cells:       41
ABC RESULTS:               XOR cells:      101
ABC RESULTS:        internal signals:      471
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       19
Removing temp directory.

3.22.10. Extracting gate netlist of module `\IMM' to `<abc-temp-dir>/input.blif'..
Extracted 52 gates and 73 wires to a netlist network with 20 inputs and 16 outputs.

3.22.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.10.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       16
ABC RESULTS:               MUX cells:       36
ABC RESULTS:        internal signals:       37
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:       16
Removing temp directory.

3.22.11. Extracting gate netlist of module `\INC' to `<abc-temp-dir>/input.blif'..
Extracted 42 gates and 60 wires to a netlist network with 18 inputs and 16 outputs.

3.22.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.11.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:              NAND cells:        8
ABC RESULTS:                OR cells:        8
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:        9
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       16
Removing temp directory.

3.22.12. Extracting gate netlist of module `\LGU' to `<abc-temp-dir>/input.blif'..
Extracted 265 gates and 302 wires to a netlist network with 36 inputs and 17 outputs.

3.22.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.12.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       16
ABC RESULTS:            ANDNOT cells:       34
ABC RESULTS:               MUX cells:      184
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:       20
ABC RESULTS:                OR cells:       11
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:        internal signals:      249
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       17
Removing temp directory.

3.22.13. Extracting gate netlist of module `\PUNEH_Controller' to `<abc-temp-dir>/input.blif'..
Extracted 406 gates and 424 wires to a netlist network with 16 inputs and 48 outputs.

3.22.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.13.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       12
ABC RESULTS:            ANDNOT cells:      119
ABC RESULTS:               MUX cells:        8
ABC RESULTS:              NAND cells:        8
ABC RESULTS:               NOR cells:       21
ABC RESULTS:               NOT cells:        3
ABC RESULTS:                OR cells:      138
ABC RESULTS:             ORNOT cells:       23
ABC RESULTS:        internal signals:      360
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       48
Removing temp directory.

3.22.14. Extracting gate netlist of module `\PUNEH_Top_Module' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.22.15. Extracting gate netlist of module `\PUNEH_datapath' to `<abc-temp-dir>/input.blif'..
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 1 outputs.

3.22.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.15.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:                OR cells:        3
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:       14
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        1
Removing temp directory.

3.22.16. Extracting gate netlist of module `\Tristate' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.23. Executing OPT pass (performing simple optimizations).

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
<suppressed ~16 debug messages>
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
<suppressed ~58 debug messages>
Optimizing module PUNEH_Controller.
<suppressed ~5 debug messages>
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
<suppressed ~3 debug messages>
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 1 cells.

3.23.3. Executing OPT_DFF pass (perform DFF optimizations).

3.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..
Removed 4 unused cells and 941 unused wires.
<suppressed ~18 debug messages>

3.23.5. Finished fast OPT passes.

3.24. Executing HIERARCHY pass (managing design hierarchy).

3.24.1. Analyzing design hierarchy..
Top module:  \PUNEH_Top_Module
Used module:     \PUNEH_Controller
Used module:     \PUNEH_datapath
Used module:         $paramod\register\N=s32'00000000000000000000000000010000
Used module:         \ARU
Used module:         \IMM
Used module:         \INC
Used module:         \LGU
Used module:         $paramod\register\N=s32'00000000000000000000000000000100
Used module:         $paramod\register\N=s32'00000000000000000000000000000001
Used module:         \Tristate
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000010

3.24.2. Analyzing design hierarchy..
Top module:  \PUNEH_Top_Module
Used module:     \PUNEH_Controller
Used module:     \PUNEH_datapath
Used module:         $paramod\register\N=s32'00000000000000000000000000010000
Used module:         \ARU
Used module:         \IMM
Used module:         \INC
Used module:         \LGU
Used module:         $paramod\register\N=s32'00000000000000000000000000000100
Used module:         $paramod\register\N=s32'00000000000000000000000000000001
Used module:         \Tristate
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\mux4_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000010000
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000100
Used module:         $paramod\mux2_to_1\N=s32'00000000000000000000000000000010
Removed 0 unused modules.

3.25. Printing statistics.

=== $paramod\mux2_to_1\N=s32'00000000000000000000000000000010 ===

   Number of wires:                  5
   Number of wire bits:              8
   Number of public wires:           5
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_MUX_                          2

=== $paramod\mux2_to_1\N=s32'00000000000000000000000000000100 ===

   Number of wires:                  5
   Number of wire bits:             14
   Number of public wires:           5
   Number of public wire bits:      14
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $_MUX_                          4

=== $paramod\mux2_to_1\N=s32'00000000000000000000000000010000 ===

   Number of wires:                  5
   Number of wire bits:             50
   Number of public wires:           5
   Number of public wire bits:      50
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 16
     $_MUX_                         16

=== $paramod\mux4_to_1\N=s32'00000000000000000000000000000100 ===

   Number of wires:                 17
   Number of wire bits:             32
   Number of public wires:           9
   Number of public wire bits:      24
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $_MUX_                         12

=== $paramod\mux4_to_1\N=s32'00000000000000000000000000010000 ===

   Number of wires:                 41
   Number of wire bits:            116
   Number of public wires:           9
   Number of public wire bits:      84
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 48
     $_MUX_                         48

=== $paramod\register\N=s32'00000000000000000000000000000001 ===

   Number of wires:                  8
   Number of wire bits:              8
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $_ANDNOT_                       1
     $_DFFE_PP0P_                    1
     $_OR_                           1

=== $paramod\register\N=s32'00000000000000000000000000000100 ===

   Number of wires:                  8
   Number of wire bits:             17
   Number of public wires:           6
   Number of public wire bits:      12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $_ANDNOT_                       4
     $_DFFE_PP0P_                    4
     $_OR_                           1

=== $paramod\register\N=s32'00000000000000000000000000010000 ===

   Number of wires:                  8
   Number of wire bits:             53
   Number of public wires:           6
   Number of public wire bits:      36
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 33
     $_ANDNOT_                      16
     $_DFFE_PP0P_                   16
     $_OR_                           1

=== ARU ===

   Number of wires:                488
   Number of wire bits:            533
   Number of public wires:           9
   Number of public wire bits:      54
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                498
     $_ANDNOT_                     129
     $_AND_                         57
     $_MUX_                         17
     $_NAND_                        31
     $_NOR_                         33
     $_NOT_                         15
     $_ORNOT_                        8
     $_OR_                          66
     $_XNOR_                        41
     $_XOR_                        101

=== IMM ===

   Number of wires:                 43
   Number of wire bits:             72
   Number of public wires:           7
   Number of public wire bits:      36
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     $_AND_                         16
     $_MUX_                         36

=== INC ===

   Number of wires:                 29
   Number of wire bits:             60
   Number of public wires:           3
   Number of public wire bits:      34
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 42
     $_ANDNOT_                       9
     $_NAND_                         8
     $_OR_                           8
     $_XNOR_                         8
     $_XOR_                          9

=== LGU ===

   Number of wires:                257
   Number of wire bits:            303
   Number of public wires:           8
   Number of public wire bits:      54
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                266
     $_ANDNOT_                      34
     $_AND_                         16
     $_MUX_                        184
     $_NOR_                          2
     $_NOT_                         17
     $_ORNOT_                        2
     $_OR_                          11

=== PUNEH_Controller ===

   Number of wires:                335
   Number of wire bits:            356
   Number of public wires:          52
   Number of public wire bits:      73
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                333
     $_ANDNOT_                     119
     $_AND_                         12
     $_DFF_PP0_                      2
     $_MUX_                          8
     $_NAND_                         8
     $_NOR_                         21
     $_NOT_                          3
     $_ORNOT_                       22
     $_OR_                         138

=== PUNEH_Top_Module ===

   Number of wires:                 52
   Number of wire bits:            101
   Number of public wires:          52
   Number of public wire bits:     101
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     PUNEH_Controller                1
     PUNEH_datapath                  1

=== PUNEH_datapath ===

   Number of wires:                 88
   Number of wire bits:            389
   Number of public wires:          78
   Number of public wire bits:     379
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $_ANDNOT_                       4
     $_OR_                           3
     $_XOR_                          4
     $paramod\mux2_to_1\N=s32'00000000000000000000000000000010      1
     $paramod\mux2_to_1\N=s32'00000000000000000000000000000100      1
     $paramod\mux2_to_1\N=s32'00000000000000000000000000010000      3
     $paramod\mux4_to_1\N=s32'00000000000000000000000000000100      1
     $paramod\mux4_to_1\N=s32'00000000000000000000000000010000      4
     $paramod\register\N=s32'00000000000000000000000000000001      4
     $paramod\register\N=s32'00000000000000000000000000000100      1
     $paramod\register\N=s32'00000000000000000000000000010000      4
     ARU                             1
     IMM                             1
     INC                             2
     LGU                             1
     Tristate                        1

=== Tristate ===

   Number of wires:                  3
   Number of wire bits:             33
   Number of public wires:           3
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== design hierarchy ===

   PUNEH_Top_Module                  1
     PUNEH_Controller                1
     PUNEH_datapath                  1
       $paramod\mux2_to_1\N=s32'00000000000000000000000000000010      1
       $paramod\mux2_to_1\N=s32'00000000000000000000000000000100      1
       $paramod\mux2_to_1\N=s32'00000000000000000000000000010000      3
       $paramod\mux4_to_1\N=s32'00000000000000000000000000000100      1
       $paramod\mux4_to_1\N=s32'00000000000000000000000000010000      4
       $paramod\register\N=s32'00000000000000000000000000000001      4
       $paramod\register\N=s32'00000000000000000000000000000100      1
       $paramod\register\N=s32'00000000000000000000000000010000      4
       ARU                           1
       IMM                           1
       INC                           2
       LGU                           1
       Tristate                      1

   Number of wires:               1602
   Number of wire bits:           2836
   Number of public wires:         339
   Number of public wire bits:    1510
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1655
     $_ANDNOT_                     376
     $_AND_                        101
     $_DFFE_PP0P_                   72
     $_DFF_PP0_                      2
     $_MUX_                        503
     $_NAND_                        55
     $_NOR_                         56
     $_NOT_                         35
     $_ORNOT_                       32
     $_OR_                         243
     $_XNOR_                        57
     $_XOR_                        123

3.26. Executing CHECK pass (checking for obvious problems).
Checking module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010...
Checking module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100...
Checking module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000...
Checking module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100...
Checking module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000...
Checking module $paramod\register\N=s32'00000000000000000000000000000001...
Checking module $paramod\register\N=s32'00000000000000000000000000000100...
Checking module $paramod\register\N=s32'00000000000000000000000000010000...
Checking module ARU...
Checking module IMM...
Checking module INC...
Checking module LGU...
Checking module PUNEH_Controller...
Checking module PUNEH_Top_Module...
Checking module PUNEH_datapath...
Checking module Tristate...
Found and reported 0 problems.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
<suppressed ~7 debug messages>
Optimizing module Tristate.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

4.6. Executing OPT_SHARE pass.

4.7. Executing OPT_DFF pass (perform DFF optimizations).

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

4.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

4.10. Finished OPT passes. (There is nothing left to do.)

5. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFF_N (noninv, pins=3, area=0.00) is a direct match for cell type $_DFF_N_.
  cell DFF (noninv, pins=3, area=18.00) is a direct match for cell type $_DFF_P_.
  cell DFF_NN0 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_NN0_.
  cell DFF_NN1 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_NN1_.
  cell DFF_NP0 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_NP0_.
  cell DFF_NP1 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_NP1_.
  cell DFF_PN0 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_PN0_.
  cell DFF_PN1 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_PN1_.
  cell DFF_PP0 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_PP0_.
  cell DFF_PP1 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_PP1_.
  final dff cell mappings:
    \DFF_N _DFF_N_ (.C( C), .D( D), .Q( Q));
    \DFF _DFF_P_ (.C( C), .D( D), .Q( Q));
    \DFF_NN0 _DFF_NN0_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_NN1 _DFF_NN1_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_NP0 _DFF_NP0_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_NP1 _DFF_NP1_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_PN0 _DFF_PN0_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_PN1 _DFF_PN1_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_PP0 _DFF_PP0_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_PP1 _DFF_PP1_ (.C( C), .D( D), .Q( Q), .R( R));
    unmapped dff cell: $_DFFSR_NNN_
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

5.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010':
Mapping DFF cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100':
Mapping DFF cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000':
Mapping DFF cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100':
Mapping DFF cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000':
Mapping DFF cells in module `$paramod\register\N=s32'00000000000000000000000000000001':
  mapped 1 $_DFF_PP0_ cells to \DFF_PP0 cells.
Mapping DFF cells in module `$paramod\register\N=s32'00000000000000000000000000000100':
  mapped 4 $_DFF_PP0_ cells to \DFF_PP0 cells.
Mapping DFF cells in module `$paramod\register\N=s32'00000000000000000000000000010000':
  mapped 16 $_DFF_PP0_ cells to \DFF_PP0 cells.
Mapping DFF cells in module `\ARU':
Mapping DFF cells in module `\IMM':
Mapping DFF cells in module `\INC':
Mapping DFF cells in module `\LGU':
Mapping DFF cells in module `\PUNEH_Controller':
  mapped 2 $_DFF_PP0_ cells to \DFF_PP0 cells.
Mapping DFF cells in module `\PUNEH_Top_Module':
Mapping DFF cells in module `\PUNEH_datapath':
Mapping DFF cells in module `\Tristate':

6. Executing OPT pass (performing simple optimizations).

6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000001..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000000100..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\register\N=s32'00000000000000000000000000010000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ARU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \IMM..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \INC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \LGU..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_Controller..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \PUNEH_datapath..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000001.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000000100.
  Optimizing cells in module $paramod\register\N=s32'00000000000000000000000000010000.
  Optimizing cells in module \ARU.
  Optimizing cells in module \IMM.
  Optimizing cells in module \INC.
  Optimizing cells in module \LGU.
  Optimizing cells in module \PUNEH_Controller.
  Optimizing cells in module \PUNEH_Top_Module.
  Optimizing cells in module \PUNEH_datapath.
  Optimizing cells in module \Tristate.
Performed a total of 0 changes.

6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000001'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000000100'.
Finding identical cells in module `$paramod\register\N=s32'00000000000000000000000000010000'.
Finding identical cells in module `\ARU'.
Finding identical cells in module `\IMM'.
Finding identical cells in module `\INC'.
Finding identical cells in module `\LGU'.
Finding identical cells in module `\PUNEH_Controller'.
Finding identical cells in module `\PUNEH_Top_Module'.
Finding identical cells in module `\PUNEH_datapath'.
Finding identical cells in module `\Tristate'.
Removed a total of 0 cells.

6.6. Executing OPT_DFF pass (perform DFF optimizations).

6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000001..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000000100..
Finding unused cells or wires in module $paramod\register\N=s32'00000000000000000000000000010000..
Finding unused cells or wires in module \ARU..
Finding unused cells or wires in module \IMM..
Finding unused cells or wires in module \INC..
Finding unused cells or wires in module \LGU..
Finding unused cells or wires in module \PUNEH_Controller..
Finding unused cells or wires in module \PUNEH_Top_Module..
Finding unused cells or wires in module \PUNEH_datapath..
Finding unused cells or wires in module \Tristate..

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\register\N=s32'00000000000000000000000000000100.
Optimizing module $paramod\register\N=s32'00000000000000000000000000010000.
Optimizing module ARU.
Optimizing module IMM.
Optimizing module INC.
Optimizing module LGU.
Optimizing module PUNEH_Controller.
Optimizing module PUNEH_Top_Module.
Optimizing module PUNEH_datapath.
Optimizing module Tristate.

6.9. Finished OPT passes. (There is nothing left to do.)

7. Executing ABC pass (technology mapping using ABC).

7.1. Extracting gate netlist of module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000010' to `<abc-temp-dir>/input.blif'..
Extracted 2 gates and 7 wires to a netlist network with 5 inputs and 2 outputs.

7.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.1.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:        6
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

7.2. Extracting gate netlist of module `$paramod\mux2_to_1\N=s32'00000000000000000000000000000100' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 13 wires to a netlist network with 9 inputs and 4 outputs.

7.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.2.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       12
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:        4
Removing temp directory.

7.3. Extracting gate netlist of module `$paramod\mux2_to_1\N=s32'00000000000000000000000000010000' to `<abc-temp-dir>/input.blif'..
Extracted 16 gates and 49 wires to a netlist network with 33 inputs and 16 outputs.

7.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.3.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       48
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       16
Removing temp directory.

7.4. Extracting gate netlist of module `$paramod\mux4_to_1\N=s32'00000000000000000000000000000100' to `<abc-temp-dir>/input.blif'..
Extracted 12 gates and 31 wires to a netlist network with 19 inputs and 4 outputs.

7.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.4.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       12
ABC RESULTS:               NOR cells:       24
ABC RESULTS:               NOT cells:        9
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:        4
Removing temp directory.

7.5. Extracting gate netlist of module `$paramod\mux4_to_1\N=s32'00000000000000000000000000010000' to `<abc-temp-dir>/input.blif'..
Extracted 48 gates and 115 wires to a netlist network with 67 inputs and 16 outputs.

7.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.5.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       48
ABC RESULTS:               NOR cells:       96
ABC RESULTS:               NOT cells:       33
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:       67
ABC RESULTS:          output signals:       16
Removing temp directory.

7.6. Extracting gate netlist of module `$paramod\register\N=s32'00000000000000000000000000000001' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 1 outputs.

7.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.6.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        1
Removing temp directory.

7.7. Extracting gate netlist of module `$paramod\register\N=s32'00000000000000000000000000000100' to `<abc-temp-dir>/input.blif'..
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

7.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.7.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       12
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:        4
Removing temp directory.

7.8. Extracting gate netlist of module `$paramod\register\N=s32'00000000000000000000000000010000' to `<abc-temp-dir>/input.blif'..
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 16 outputs.

7.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.8.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       48
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       16
Removing temp directory.

7.9. Extracting gate netlist of module `\ARU' to `<abc-temp-dir>/input.blif'..
Extracted 498 gates and 531 wires to a netlist network with 33 inputs and 19 outputs.

7.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.9.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:      428
ABC RESULTS:               NOR cells:      384
ABC RESULTS:               NOT cells:      167
ABC RESULTS:        internal signals:      479
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:       19
Removing temp directory.

7.10. Extracting gate netlist of module `\IMM' to `<abc-temp-dir>/input.blif'..
Extracted 52 gates and 72 wires to a netlist network with 20 inputs and 16 outputs.

7.10.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.10.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       31
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               NOT cells:        7
ABC RESULTS:        internal signals:       36
ABC RESULTS:           input signals:       20
ABC RESULTS:          output signals:       16
Removing temp directory.

7.11. Extracting gate netlist of module `\INC' to `<abc-temp-dir>/input.blif'..
Extracted 42 gates and 60 wires to a netlist network with 18 inputs and 16 outputs.

7.11.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.11.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:       52
ABC RESULTS:               NOT cells:       19
ABC RESULTS:        internal signals:       26
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       16
Removing temp directory.

7.12. Extracting gate netlist of module `\LGU' to `<abc-temp-dir>/input.blif'..
Extracted 266 gates and 302 wires to a netlist network with 36 inputs and 17 outputs.

7.12.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.12.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:      336
ABC RESULTS:               NOR cells:      190
ABC RESULTS:               NOT cells:       79
ABC RESULTS:        internal signals:      249
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       17
Removing temp directory.

7.13. Extracting gate netlist of module `\PUNEH_Controller' to `<abc-temp-dir>/input.blif'..
Extracted 331 gates and 347 wires to a netlist network with 16 inputs and 48 outputs.

7.13.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.13.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:      104
ABC RESULTS:               NOR cells:      103
ABC RESULTS:               NOT cells:       42
ABC RESULTS:        internal signals:      283
ABC RESULTS:           input signals:       16
ABC RESULTS:          output signals:       48
Removing temp directory.

7.14. Extracting gate netlist of module `\PUNEH_Top_Module' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

7.15. Extracting gate netlist of module `\PUNEH_datapath' to `<abc-temp-dir>/input.blif'..
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 1 outputs.

7.15.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.15.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               NOR cells:       10
ABC RESULTS:               NOT cells:        4
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:        1
Removing temp directory.

7.16. Extracting gate netlist of module `\Tristate' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

8. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\mux2_to_1\N=s32'00000000000000000000000000000010.
Deleting now unused module $paramod\mux2_to_1\N=s32'00000000000000000000000000000100.
Deleting now unused module $paramod\mux2_to_1\N=s32'00000000000000000000000000010000.
Deleting now unused module $paramod\mux4_to_1\N=s32'00000000000000000000000000000100.
Deleting now unused module $paramod\mux4_to_1\N=s32'00000000000000000000000000010000.
Deleting now unused module $paramod\register\N=s32'00000000000000000000000000000001.
Deleting now unused module $paramod\register\N=s32'00000000000000000000000000000100.
Deleting now unused module $paramod\register\N=s32'00000000000000000000000000010000.
Deleting now unused module ARU.
Deleting now unused module IMM.
Deleting now unused module INC.
Deleting now unused module LGU.
Deleting now unused module PUNEH_Controller.
Deleting now unused module PUNEH_datapath.
Deleting now unused module Tristate.
<suppressed ~27 debug messages>

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PUNEH_Top_Module.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

9.6. Executing OPT_DFF pass (perform DFF optimizations).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PUNEH_Top_Module..
Removed 0 unused cells and 2305 unused wires.
<suppressed ~1 debug messages>

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

9.9. Rerunning OPT passes. (Maybe there is more to do..)

9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PUNEH_Top_Module.
Performed a total of 0 changes.

9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

9.13. Executing OPT_DFF pass (perform DFF optimizations).

9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PUNEH_Top_Module..

9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

9.16. Finished OPT passes. (There is nothing left to do.)

10. Executing HILOMAP pass (mapping to constant drivers).

11. Executing HILOMAP pass (mapping to constant drivers).

12. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map output port PUNEH_Top_Module.addrBus: Missing option -outpad.
Mapping port PUNEH_Top_Module.clk using BUF.
Don't map inout port PUNEH_Top_Module.dataBus: Missing option -inoutpad.
Don't map output port PUNEH_Top_Module.readMEM: Missing option -outpad.
Mapping port PUNEH_Top_Module.rst using BUF.
Don't map output port PUNEH_Top_Module.writeMEM: Missing option -outpad.

13. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port PUNEH_Top_Module.clk: Missing option -inpad.
Don't map input port PUNEH_Top_Module.rst: Missing option -inpad.
Mapping port PUNEH_Top_Module.addrBus using BUF.
Don't map inout port PUNEH_Top_Module.dataBus: Missing option -inoutpad.
Mapping port PUNEH_Top_Module.readMEM using BUF.
Mapping port PUNEH_Top_Module.writeMEM using BUF.

14. Executing SPLITNETS pass (splitting up multi-bit signals).

15. Executing OPT pass (performing simple optimizations).

15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PUNEH_Top_Module.
Performed a total of 0 changes.

15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

15.6. Executing OPT_DFF pass (perform DFF optimizations).

15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PUNEH_Top_Module..
Removed 33 unused cells and 86 unused wires.
<suppressed ~67 debug messages>

15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

15.9. Rerunning OPT passes. (Maybe there is more to do..)

15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PUNEH_Top_Module.
Performed a total of 0 changes.

15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

15.13. Executing OPT_DFF pass (perform DFF optimizations).

15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PUNEH_Top_Module..

15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

15.16. Finished OPT passes. (There is nothing left to do.)
Removed 0 unused cells and 1126 unused wires.

16. Executing Verilog backend.
Dumping module `\PUNEH_Top_Module'.

17. Executing BLIF backend.

18. Executing JSON backend.

19. Executing TECHMAP pass (map to technology primitives).

19.1. Executing Verilog-2005 frontend: /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/DFF_map.v
Parsing Verilog input from `/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/DFF_map.v' to AST representation.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFF_N'.
Generating RTLIL representation for module `\DFF_PP0'.
Generating RTLIL representation for module `\DFF_PP1'.
Generating RTLIL representation for module `\DFF_PN0'.
Generating RTLIL representation for module `\DFF_PN1'.
Generating RTLIL representation for module `\DFF_NN0'.
Generating RTLIL representation for module `\DFF_NN1'.
Generating RTLIL representation for module `\DFF_NP0'.
Generating RTLIL representation for module `\DFF_NP1'.
Successfully finished Verilog frontend.

19.2. Continuing TECHMAP pass.
Using template DFF_PP0 for cells of type DFF_PP0.
No more expansions possible.
<suppressed ~86 debug messages>

20. Executing ABC pass (technology mapping using ABC).

20.1. Extracting gate netlist of module `\PUNEH_Top_Module' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

21. Executing OPT pass (performing simple optimizations).

21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PUNEH_Top_Module.
Performed a total of 0 changes.

21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

21.6. Executing OPT_DFF pass (perform DFF optimizations).

21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PUNEH_Top_Module..
Removed 0 unused cells and 518 unused wires.
<suppressed ~1 debug messages>

21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

21.9. Rerunning OPT passes. (Maybe there is more to do..)

21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PUNEH_Top_Module.
Performed a total of 0 changes.

21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

21.13. Executing OPT_DFF pass (perform DFF optimizations).

21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PUNEH_Top_Module..

21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

21.16. Finished OPT passes. (There is nothing left to do.)

22. Executing TECHMAP pass (map to technology primitives).

22.1. Executing Verilog-2005 frontend: /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/Logic_map.v
Parsing Verilog input from `/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/Puneh_Test1401_Hosein/1/tech/Logic_map.v' to AST representation.
Generating RTLIL representation for module `\BUF'.
Generating RTLIL representation for module `\TIELOM'.
Generating RTLIL representation for module `\TIEHIM'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\NOT'.
Generating RTLIL representation for module `\AND'.
Generating RTLIL representation for module `\NAND'.
Generating RTLIL representation for module `\OR'.
Generating RTLIL representation for module `\NOR'.
Generating RTLIL representation for module `\XOR'.
Generating RTLIL representation for module `\XNOR'.
Successfully finished Verilog frontend.

22.2. Continuing TECHMAP pass.
Using template NOT for cells of type NOT.
Using template NOR for cells of type NOR.
Using template NAND for cells of type NAND.
Using template TIELOM for cells of type TIELOM.
Using template TIEHIM for cells of type TIEHIM.
Using template BUF for cells of type BUF.
No more expansions possible.
<suppressed ~3317 debug messages>

23. Executing OPT pass (performing simple optimizations).

23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

23.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

23.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PUNEH_Top_Module.
Performed a total of 0 changes.

23.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

23.6. Executing OPT_DFF pass (perform DFF optimizations).

23.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PUNEH_Top_Module..
Removed 0 unused cells and 9317 unused wires.
<suppressed ~1 debug messages>

23.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

23.9. Rerunning OPT passes. (Maybe there is more to do..)

23.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \PUNEH_Top_Module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

23.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \PUNEH_Top_Module.
Performed a total of 0 changes.

23.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\PUNEH_Top_Module'.
Removed a total of 0 cells.

23.13. Executing OPT_DFF pass (perform DFF optimizations).

23.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PUNEH_Top_Module..

23.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module PUNEH_Top_Module.

23.16. Finished OPT passes. (There is nothing left to do.)

24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \PUNEH_Top_Module..

25. Printing statistics.

=== PUNEH_Top_Module ===

   Number of wires:               3423
   Number of wire bits:           3453
   Number of public wires:         321
   Number of public wire bits:     351
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3377
     bufg                           58
     dff                            74
     nand_n                       1518
     nor_n                        1231
     notg                          496

26. Executing Verilog backend.
Dumping module `\PUNEH_Top_Module'.

27. Executing JSON backend.

Warnings: 13 unique messages, 14 total
End of script. Logfile hash: 0b35daf4ee, CPU: user 29.12s system 0.18s
Yosys 0.10+12 (open-tool-forge build) (git sha1 356ec7bb, clang 11.0.3 )
Time spent: 25% 4x write_verilog (8 sec), 12% 3x techmap (3 sec), ...
