
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+12 (open-tool-forge build) (git sha1 356ec7bb, clang 11.0.3 )


-- Executing script file `/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/yosys_script.ys' --

1. Executing Verilog-2005 frontend: /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v
Parsing Verilog input from `/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:54)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:89)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:108)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:123)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:136)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:139)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:151)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:156)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:201)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:203)
Warning: Yosys has only limited support for tri-state logic at the moment. (/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:207)
Generating RTLIL representation for module `\Puneh_Top'.
Generating RTLIL representation for module `\Puneh_DP'.
Warning: reg '\mux_OF_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:53.9-54.43.
Warning: reg '\mux_AC_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:86.9-89.36.
Warning: reg '\N' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:104.9-104.24.
Warning: reg '\Z' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:105.9-105.25.
Warning: reg '\MO' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:107.9-108.34.
Warning: reg '\N' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:118.9-118.24.
Warning: reg '\Z' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:119.9-119.25.
Warning: reg '\V' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:120.11-120.109.
Warning: reg '\mux_ARU_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:122.9-123.33.
Warning: reg '\mux_PC_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:134.9-136.39.
Warning: reg '\INC_PC_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:138.9-139.51.
Warning: reg '\mux_IN_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:150.9-151.39.
Warning: reg '\INC_IN_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:152.9-152.37.
Warning: reg '\mux_flags_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:155.9-156.39.
Warning: reg '\exp' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:190.9-190.27.
Warning: reg '\obs' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:191.9-191.27.
Warning: reg '\enSKP' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:196.9-196.50.
Warning: reg '\mux_dataBus_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:199.9-201.36.
Warning: reg '\tristate_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:203.9-203.60.
Warning: reg '\dataBus_out' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:204.9-204.35.
Warning: reg '\addrBus' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:205.9-207.34.
Warning: reg '\IR_out_cont' is assigned in a continuous assignment at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:209.9-209.29.
Note: Assuming pure combinatorial block at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:66.2-74.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:91.2-103.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:110.2-116.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Generating RTLIL representation for module `\Puneh_C'.
Note: Assuming pure combinatorial block at /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258.2-322.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Finding top of design hierarchy..
root of   0 design levels: Puneh_C             
root of   0 design levels: Puneh_DP            
root of   1 design levels: Puneh_Top           
Automatically selected Puneh_Top as design top module.

2.2. Analyzing design hierarchy..
Top module:  \Puneh_Top
Used module:     \Puneh_C
Used module:     \Puneh_DP

2.3. Analyzing design hierarchy..
Top module:  \Puneh_Top
Used module:     \Puneh_C
Used module:     \Puneh_DP
Removed 0 unused modules.
Mapping positional arguments of cell Puneh_Top.U2 (Puneh_C).
Mapping positional arguments of cell Puneh_Top.U1 (Puneh_DP).

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \Puneh_Top
Used module:     \Puneh_C
Used module:     \Puneh_DP

3.1.2. Analyzing design hierarchy..
Top module:  \Puneh_Top
Used module:     \Puneh_C
Used module:     \Puneh_DP
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:324$71 in module Puneh_C.
Removed 1 dead cases from process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69 in module Puneh_C.
Marked 6 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69 in module Puneh_C.
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:182$56 in module Puneh_DP.
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:174$55 in module Puneh_DP.
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:166$54 in module Puneh_DP.
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:158$53 in module Puneh_DP.
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:142$47 in module Puneh_DP.
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:126$39 in module Puneh_DP.
Marked 2 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:110$24 in module Puneh_DP.
Marked 5 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:91$11 in module Puneh_DP.
Marked 2 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:76$6 in module Puneh_DP.
Marked 2 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:66$5 in module Puneh_DP.
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:57$4 in module Puneh_DP.
Marked 1 switch rules as full_case in process $proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:45$1 in module Puneh_DP.
Removed a total of 1 dead cases.

3.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 44 assignments to connections.

3.2.4. Executing PROC_INIT pass (extract init attributes).

3.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:324$71'.
Found async reset \rst in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:182$56'.
Found async reset \rst in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:174$55'.
Found async reset \rst in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:166$54'.
Found async reset \rst in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:158$53'.
Found async reset \rst in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:142$47'.
Found async reset \rst in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:126$39'.
Found async reset \rst in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:76$6'.
Found async reset \rst in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:57$4'.
Found async reset \rst in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:45$1'.

3.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:324$71'.
     1/1: $0\pstate[3:0]
Creating decoders for process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
     1/141: $5\INC1[0:0]
     2/141: $3\conOF[0:0]
     3/141: $3\selMEM_LGU[0:0]
     4/141: $3\selAC_MEM[0:0]
     5/141: $5\nstate[3:0]
     6/141: $6\selINC_PC[0:0]
     7/141: $3\seldataBus[0:0]
     8/141: $3\readMEM[0:0]
     9/141: $3\writeMEM[0:0]
    10/141: $6\ldPC[0:0]
    11/141: $2\selIN_MEM[0:0]
    12/141: $5\selARU_AC[0:0]
    13/141: $5\ADD[0:0]
    14/141: $3\selMO_ARU[0:0]
    15/141: $5\ldAC[0:0]
    16/141: $3\selIR_MEM[0:0]
    17/141: $3\selMEM_AC[0:0]
    18/141: $3\INC1[0:0]
    19/141: $5\selINC_PC[0:0]
    20/141: $5\ldPC[0:0]
    21/141: $3\selINC_PC[0:0]
    22/141: $4\selINC_PC[0:0]
    23/141: $4\zeroAC[0:0]
    24/141: $4\selPC_OF[0:0]
    25/141: $4\ldOF[0:0]
    26/141: $4\nstate[3:0]
    27/141: $4\NOT[0:0]
    28/141: $4\sel1_ARU[0:0]
    29/141: $4\SE12bits[0:0]
    30/141: $4\selARU_AC[0:0]
    31/141: $4\selLGU_AC[0:0]
    32/141: $4\ADD[0:0]
    33/141: $4\ldSR[3:0]
    34/141: $4\selCAL_SR[0:0]
    35/141: $4\ldPC[0:0]
    36/141: $4\ldAC[0:0]
    37/141: $4\selIMM_PC[0:0]
    38/141: $3\SE12bits[0:0]
    39/141: $3\selIMM_LGU[0:0]
    40/141: $3\selLGU_AC[0:0]
    41/141: $3\ldAC[0:0]
    42/141: $3\selIMM_OF[0:0]
    43/141: $3\ldOF[0:0]
    44/141: $3\nstate[3:0]
    45/141: $3\ldSR[3:0]
    46/141: $4\INC1[0:0]
    47/141: $3\INC2[0:0]
    48/141: $3\selCAL_SR[0:0]
    49/141: $4\INC2[0:0]
    50/141: $3\selIMM_PC[0:0]
    51/141: $3\ADD[0:0]
    52/141: $3\NOT[0:0]
    53/141: $3\sel1_ARU[0:0]
    54/141: $3\SHF[1:0]
    55/141: $3\zeroAC[0:0]
    56/141: $3\selSET_SR[0:0]
    57/141: $3\ldPC[0:0]
    58/141: $3\selARU_AC[0:0]
    59/141: $3\selPC_OF[0:0]
    60/141: $2\conOF[0:0]
    61/141: $2\selPC_MEM[0:0]
    62/141: $2\selINC_PC[0:0]
    63/141: $2\selIMM_AC[0:0]
    64/141: $2\ADD[0:0]
    65/141: $2\selAC_MEM[0:0]
    66/141: $2\nstate[3:0]
    67/141: $2\selIMM_LGU[0:0]
    68/141: $2\SHF[1:0]
    69/141: $2\INC2[0:0]
    70/141: $2\selMEM_LGU[0:0]
    71/141: $2\selSET_SR[0:0]
    72/141: $2\selIMM_PC[0:0]
    73/141: $2\selMEM_IN[0:0]
    74/141: $2\writeMEM[0:0]
    75/141: $2\seldataBus[0:0]
    76/141: $2\selINC_IN[0:0]
    77/141: $2\selMO_ARU[0:0]
    78/141: $2\ldSR[3:0]
    79/141: $2\selIR_MEM[0:0]
    80/141: $2\INC1[0:0]
    81/141: $2\selARU_AC[0:0]
    82/141: $2\selCAL_SR[0:0]
    83/141: $2\NOT[0:0]
    84/141: $2\readMEM[0:0]
    85/141: $2\ldAC[0:0]
    86/141: $2\sel1_ARU[0:0]
    87/141: $2\AND[0:0]
    88/141: $2\selLGU_AC[0:0]
    89/141: $2\zeroAC[0:0]
    90/141: $2\selMEM_PC[0:0]
    91/141: $2\ldPC[0:0]
    92/141: $2\SE4bits[0:0]
    93/141: $2\ldIN[0:0]
    94/141: $2\SE12bits[0:0]
    95/141: $2\ldOF[0:0]
    96/141: $2\selIMM_OF[0:0]
    97/141: $2\selPC_OF[0:0]
    98/141: $2\MUL[0:0]
    99/141: $2\selMEM_AC[0:0]
   100/141: $1\selPC_MEM[0:0]
   101/141: $1\readMEM[0:0]
   102/141: $1\ldIR[0:0]
   103/141: $1\nstate[3:0]
   104/141: $1\ldSR[3:0]
   105/141: $1\SHF[1:0]
   106/141: $1\INC2[0:0]
   107/141: $1\INC1[0:0]
   108/141: $1\selCAL_SR[0:0]
   109/141: $1\selSET_SR[0:0]
   110/141: $1\seldataBus[0:0]
   111/141: $1\selIR_MEM[0:0]
   112/141: $1\selAC_MEM[0:0]
   113/141: $1\selIN_MEM[0:0]
   114/141: $1\ldIN[0:0]
   115/141: $1\selMEM_IN[0:0]
   116/141: $1\selINC_IN[0:0]
   117/141: $1\selIMM_PC[0:0]
   118/141: $1\selMEM_PC[0:0]
   119/141: $1\selINC_PC[0:0]
   120/141: $1\ldPC[0:0]
   121/141: $1\MUL[0:0]
   122/141: $1\ADD[0:0]
   123/141: $1\NOT[0:0]
   124/141: $1\AND[0:0]
   125/141: $1\selMO_ARU[0:0]
   126/141: $1\sel1_ARU[0:0]
   127/141: $1\selMEM_LGU[0:0]
   128/141: $1\selIMM_LGU[0:0]
   129/141: $1\zeroAC[0:0]
   130/141: $1\ldAC[0:0]
   131/141: $1\selLGU_AC[0:0]
   132/141: $1\selARU_AC[0:0]
   133/141: $1\selMEM_AC[0:0]
   134/141: $1\selIMM_AC[0:0]
   135/141: $1\conOF[0:0]
   136/141: $1\SE12bits[0:0]
   137/141: $1\SE4bits[0:0]
   138/141: $1\ldOF[0:0]
   139/141: $1\selIMM_OF[0:0]
   140/141: $1\selPC_OF[0:0]
   141/141: $1\writeMEM[0:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:182$56'.
     1/1: $0\V_out1[0:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:174$55'.
     1/1: $0\C_out1[0:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:166$54'.
     1/1: $0\N_out1[0:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:158$53'.
     1/1: $0\Z_out1[0:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:142$47'.
     1/1: $0\IN_out[15:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:126$39'.
     1/1: $0\PC_out[15:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:110$24'.
     1/3: $2\ARU_out[15:0]
     2/3: $0\C[0:0]
     3/3: $1\ARU_out[15:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:91$11'.
     1/5: $5\LGU_out[15:0]
     2/5: $4\LGU_out[15:0]
     3/5: $3\LGU_out[15:0]
     4/5: $2\LGU_out[15:0]
     5/5: $1\LGU_out[15:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:76$6'.
     1/1: $0\AC_out[15:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:66$5'.
     1/1: $0\IMM_out[15:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:57$4'.
     1/1: $0\IR_out[15:0]
Creating decoders for process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:45$1'.
     1/1: $0\OF_out[3:0]

3.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\Puneh_C.\readMEM' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\writeMEM' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selPC_OF' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selIMM_OF' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\ldOF' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\ldIR' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\SE4bits' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\SE12bits' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\conOF' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selIMM_AC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selMEM_AC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selARU_AC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selLGU_AC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\ldAC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\zeroAC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selIMM_LGU' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selMEM_LGU' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\sel1_ARU' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selMO_ARU' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\AND' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\NOT' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\ADD' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\MUL' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\ldPC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selINC_PC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selMEM_PC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selIMM_PC' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selINC_IN' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selMEM_IN' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\ldIN' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selIN_MEM' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selPC_MEM' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selAC_MEM' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selIR_MEM' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\seldataBus' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selSET_SR' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\selCAL_SR' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\INC1' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\INC2' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\SHF' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\ldSR' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_C.\nstate' from process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
No latch inferred for signal `\Puneh_DP.\C' from process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:110$24'.
No latch inferred for signal `\Puneh_DP.\ARU_out' from process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:110$24'.
No latch inferred for signal `\Puneh_DP.\LGU_out' from process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:91$11'.
No latch inferred for signal `\Puneh_DP.\IMM_out' from process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:66$5'.

3.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\Puneh_C.\pstate' using process `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:324$71'.
  created $adff cell `$procdff$1964' with positive edge clock and positive level reset.
Creating register for signal `\Puneh_DP.\V_out1' using process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:182$56'.
  created $adff cell `$procdff$1965' with positive edge clock and positive level reset.
Creating register for signal `\Puneh_DP.\C_out1' using process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:174$55'.
  created $adff cell `$procdff$1966' with positive edge clock and positive level reset.
Creating register for signal `\Puneh_DP.\N_out1' using process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:166$54'.
  created $adff cell `$procdff$1967' with positive edge clock and positive level reset.
Creating register for signal `\Puneh_DP.\Z_out1' using process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:158$53'.
  created $adff cell `$procdff$1968' with positive edge clock and positive level reset.
Creating register for signal `\Puneh_DP.\IN_out' using process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:142$47'.
  created $adff cell `$procdff$1969' with positive edge clock and positive level reset.
Creating register for signal `\Puneh_DP.\PC_out' using process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:126$39'.
  created $adff cell `$procdff$1970' with positive edge clock and positive level reset.
Creating register for signal `\Puneh_DP.\AC_out' using process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:76$6'.
  created $adff cell `$procdff$1971' with positive edge clock and positive level reset.
Creating register for signal `\Puneh_DP.\IR_out' using process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:57$4'.
  created $adff cell `$procdff$1972' with positive edge clock and positive level reset.
Creating register for signal `\Puneh_DP.\OF_out' using process `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:45$1'.
  created $adff cell `$procdff$1973' with positive edge clock and positive level reset.

3.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:324$71'.
Found and cleaned up 6 empty switches in `\Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
Removing empty process `Puneh_C.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:258$69'.
Found and cleaned up 1 empty switch in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:182$56'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:182$56'.
Found and cleaned up 1 empty switch in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:174$55'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:174$55'.
Found and cleaned up 1 empty switch in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:166$54'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:166$54'.
Found and cleaned up 1 empty switch in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:158$53'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:158$53'.
Found and cleaned up 1 empty switch in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:142$47'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:142$47'.
Found and cleaned up 1 empty switch in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:126$39'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:126$39'.
Found and cleaned up 2 empty switches in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:110$24'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:110$24'.
Found and cleaned up 5 empty switches in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:91$11'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:91$11'.
Found and cleaned up 2 empty switches in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:76$6'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:76$6'.
Found and cleaned up 3 empty switches in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:66$5'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:66$5'.
Found and cleaned up 1 empty switch in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:57$4'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:57$4'.
Found and cleaned up 1 empty switch in `\Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:45$1'.
Removing empty process `Puneh_DP.$proc$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:45$1'.
Cleaned up 26 empty switches.

3.2.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
<suppressed ~58 debug messages>
Optimizing module Puneh_DP.
<suppressed ~1 debug messages>
Optimizing module Puneh_Top.

3.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 2 unused cells and 309 unused wires.
<suppressed ~9 debug messages>

3.5. Executing CHECK pass (checking for obvious problems).
Checking module Puneh_C...
Checking module Puneh_DP...
Warning: multiple conflicting drivers for Puneh_DP.\Z:
    port Y[0] of cell $not$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:105$21 ($not)
    port Y[0] of cell $not$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:119$28 ($not)
Checking module Puneh_Top...
Found and reported 1 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
<suppressed ~2796 debug messages>
Finding identical cells in module `\Puneh_DP'.
<suppressed ~6 debug messages>
Finding identical cells in module `\Puneh_Top'.
Removed a total of 934 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$481.
    dead port 2/2 on $mux $procmux$1243.
    dead port 2/2 on $mux $procmux$483.
    dead port 2/2 on $mux $procmux$485.
    dead port 2/2 on $mux $procmux$500.
    dead port 2/2 on $mux $procmux$502.
    dead port 2/2 on $mux $procmux$504.
    dead port 2/2 on $mux $procmux$519.
    dead port 2/2 on $mux $procmux$1621.
    dead port 2/2 on $mux $procmux$521.
    dead port 2/2 on $mux $procmux$1369.
    dead port 2/2 on $mux $procmux$523.
    dead port 2/2 on $mux $procmux$537.
    dead port 2/2 on $mux $procmux$1306.
    dead port 2/2 on $mux $procmux$539.
    dead port 2/2 on $mux $procmux$541.
    dead port 2/2 on $mux $procmux$557.
    dead port 2/2 on $mux $procmux$1117.
    dead port 2/2 on $mux $procmux$559.
    dead port 2/2 on $mux $procmux$1054.
    dead port 2/2 on $mux $procmux$561.
    dead port 2/2 on $mux $procmux$178.
    dead port 2/2 on $mux $procmux$1201.
    dead port 2/2 on $mux $procmux$574.
    dead port 2/2 on $mux $procmux$576.
    dead port 2/2 on $mux $procmux$1537.
    dead port 2/2 on $mux $procmux$587.
    dead port 2/2 on $mux $procmux$589.
    dead port 2/2 on $mux $procmux$1453.
    dead port 2/2 on $mux $procmux$601.
    dead port 2/2 on $mux $procmux$603.
    dead port 2/2 on $mux $procmux$164.
    dead port 2/2 on $mux $procmux$1159.
    dead port 2/2 on $mux $procmux$615.
    dead port 2/2 on $mux $procmux$617.
    dead port 2/2 on $mux $procmux$1642.
    dead port 2/2 on $mux $procmux$630.
    dead port 2/2 on $mux $procmux$632.
    dead port 2/2 on $mux $procmux$645.
    dead port 2/2 on $mux $procmux$647.
    dead port 2/2 on $mux $procmux$659.
    dead port 2/2 on $mux $procmux$661.
    dead port 2/2 on $mux $procmux$109.
    dead port 2/2 on $mux $procmux$673.
    dead port 2/2 on $mux $procmux$132.
    dead port 2/2 on $mux $procmux$675.
    dead port 2/2 on $mux $procmux$690.
    dead port 2/2 on $mux $procmux$1390.
    dead port 2/2 on $mux $procmux$692.
    dead port 2/2 on $mux $procmux$694.
    dead port 2/2 on $mux $procmux$702.
    dead port 2/2 on $mux $procmux$704.
    dead port 2/2 on $mux $procmux$1264.
    dead port 2/2 on $mux $procmux$147.
    dead port 2/2 on $mux $procmux$716.
    dead port 2/2 on $mux $procmux$718.
    dead port 2/2 on $mux $procmux$1558.
    dead port 2/2 on $mux $procmux$727.
    dead port 2/2 on $mux $procmux$1033.
    dead port 2/2 on $mux $procmux$729.
    dead port 2/2 on $mux $procmux$731.
    dead port 2/2 on $mux $procmux$743.
    dead port 2/2 on $mux $procmux$186.
    dead port 2/2 on $mux $procmux$745.
    dead port 2/2 on $mux $procmux$757.
    dead port 2/2 on $mux $procmux$759.
    dead port 2/2 on $mux $procmux$1327.
    dead port 2/2 on $mux $procmux$76.
    dead port 2/2 on $mux $procmux$1663.
    dead port 2/2 on $mux $procmux$771.
    dead port 2/2 on $mux $procmux$773.
    dead port 2/2 on $mux $procmux$1474.
    dead port 2/2 on $mux $procmux$785.
    dead port 2/2 on $mux $procmux$787.
    dead port 2/2 on $mux $procmux$797.
    dead port 2/2 on $mux $procmux$194.
    dead port 2/2 on $mux $procmux$799.
    dead port 2/2 on $mux $procmux$811.
    dead port 2/2 on $mux $procmux$1096.
    dead port 2/2 on $mux $procmux$813.
    dead port 2/2 on $mux $procmux$204.
    dead port 2/2 on $mux $procmux$157.
    dead port 2/2 on $mux $procmux$820.
    dead port 2/2 on $mux $procmux$822.
    dead port 2/2 on $mux $procmux$216.
    dead port 2/2 on $mux $procmux$835.
    dead port 2/2 on $mux $procmux$218.
    dead port 2/2 on $mux $procmux$837.
    dead port 2/2 on $mux $procmux$84.
    dead port 2/2 on $mux $procmux$227.
    dead port 2/2 on $mux $procmux$849.
    dead port 2/2 on $mux $procmux$851.
    dead port 2/2 on $mux $procmux$229.
    dead port 2/2 on $mux $procmux$1222.
    dead port 2/2 on $mux $procmux$231.
    dead port 2/2 on $mux $procmux$863.
    dead port 2/2 on $mux $procmux$1012.
    dead port 2/2 on $mux $procmux$865.
    dead port 2/2 on $mux $procmux$240.
    dead port 2/2 on $mux $procmux$242.
    dead port 2/2 on $mux $procmux$244.
    dead port 2/2 on $mux $procmux$1138.
    dead port 2/2 on $mux $procmux$141.
    dead port 2/2 on $mux $procmux$1579.
    dead port 2/2 on $mux $procmux$1684.
    dead port 2/2 on $mux $procmux$257.
    dead port 2/2 on $mux $procmux$886.
    dead port 2/2 on $mux $procmux$259.
    dead port 2/2 on $mux $procmux$1411.
    dead port 2/2 on $mux $procmux$274.
    dead port 2/2 on $mux $procmux$1180.
    dead port 2/2 on $mux $procmux$276.
    dead port 2/2 on $mux $procmux$278.
    dead port 2/2 on $mux $procmux$293.
    dead port 2/2 on $mux $procmux$1495.
    dead port 2/2 on $mux $procmux$295.
    dead port 2/2 on $mux $procmux$907.
    dead port 2/2 on $mux $procmux$297.
    dead port 2/2 on $mux $procmux$91.
    dead port 2/2 on $mux $procmux$1285.
    dead port 2/2 on $mux $procmux$314.
    dead port 2/2 on $mux $procmux$316.
    dead port 2/2 on $mux $procmux$318.
    dead port 2/2 on $mux $procmux$1348.
    dead port 2/2 on $mux $procmux$335.
    dead port 2/2 on $mux $procmux$337.
    dead port 2/2 on $mux $procmux$339.
    dead port 2/2 on $mux $procmux$928.
    dead port 2/2 on $mux $procmux$355.
    dead port 2/2 on $mux $procmux$1705.
    dead port 2/2 on $mux $procmux$357.
    dead port 2/2 on $mux $procmux$359.
    dead port 2/2 on $mux $procmux$373.
    dead port 2/2 on $mux $procmux$1075.
    dead port 2/2 on $mux $procmux$375.
    dead port 2/2 on $mux $procmux$171.
    dead port 2/2 on $mux $procmux$377.
    dead port 2/2 on $mux $procmux$1600.
    dead port 2/2 on $mux $procmux$390.
    dead port 2/2 on $mux $procmux$949.
    dead port 2/2 on $mux $procmux$392.
    dead port 2/2 on $mux $procmux$394.
    dead port 2/2 on $mux $procmux$410.
    dead port 2/2 on $mux $procmux$412.
    dead port 2/2 on $mux $procmux$100.
    dead port 2/2 on $mux $procmux$414.
    dead port 2/2 on $mux $procmux$124.
    dead port 2/2 on $mux $procmux$427.
    dead port 2/2 on $mux $procmux$115.
    dead port 2/2 on $mux $procmux$970.
    dead port 2/2 on $mux $procmux$429.
    dead port 2/2 on $mux $procmux$1432.
    dead port 2/2 on $mux $procmux$431.
    dead port 2/2 on $mux $procmux$1516.
    dead port 2/2 on $mux $procmux$445.
    dead port 2/2 on $mux $procmux$447.
    dead port 2/2 on $mux $procmux$449.
    dead port 2/2 on $mux $procmux$462.
    dead port 2/2 on $mux $procmux$464.
    dead port 2/2 on $mux $procmux$991.
    dead port 2/2 on $mux $procmux$466.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1894.
    dead port 1/2 on $mux $procmux$1906.
    dead port 1/2 on $mux $procmux$1909.
    dead port 1/2 on $mux $procmux$1912.
    dead port 1/2 on $mux $procmux$1915.
    dead port 1/2 on $mux $procmux$1921.
    dead port 1/2 on $mux $procmux$1924.
    dead port 1/2 on $mux $procmux$1927.
    dead port 1/2 on $mux $procmux$1933.
    dead port 1/2 on $mux $procmux$1936.
    dead port 1/2 on $mux $procmux$1942.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 172 multiplexer ports.
<suppressed ~61 debug messages>

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
    New ctrl vector for $pmux cell $procmux$1331: { $auto$opt_reduce.cc:134:opt_mux$1977 $auto$opt_reduce.cc:134:opt_mux$1975 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1373: { $auto$opt_reduce.cc:134:opt_mux$1981 $auto$opt_reduce.cc:134:opt_mux$1979 }
    New ctrl vector for $pmux cell $procmux$1058: { $auto$opt_reduce.cc:134:opt_mux$1983 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1037: { $auto$opt_reduce.cc:134:opt_mux$1985 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$209: { $procmux$214_CMP $auto$opt_reduce.cc:134:opt_mux$1987 }
    New ctrl vector for $pmux cell $procmux$1163: { $auto$opt_reduce.cc:134:opt_mux$1991 $auto$opt_reduce.cc:134:opt_mux$1989 }
    New ctrl vector for $pmux cell $procmux$827: { $procmux$214_CMP $procmux$228_CMP $auto$opt_reduce.cc:134:opt_mux$1993 }
    New ctrl vector for $pmux cell $procmux$1646: { $auto$opt_reduce.cc:134:opt_mux$1995 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1100: { $auto$opt_reduce.cc:134:opt_mux$1997 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$121: $auto$opt_reduce.cc:134:opt_mux$1999
    New ctrl vector for $mux cell $procmux$657: { }
    New ctrl vector for $pmux cell $procmux$1247: { $auto$opt_reduce.cc:134:opt_mux$2003 $auto$opt_reduce.cc:134:opt_mux$2001 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$183: $auto$opt_reduce.cc:134:opt_mux$2005
    New ctrl vector for $pmux cell $procmux$869: { $auto$opt_reduce.cc:134:opt_mux$2009 $auto$opt_reduce.cc:134:opt_mux$2007 }
    New ctrl vector for $pmux cell $procmux$568: { $procmux$214_CMP $auto$opt_reduce.cc:134:opt_mux$2011 }
    New ctrl vector for $pmux cell $procmux$1226: { $auto$opt_reduce.cc:134:opt_mux$2015 $auto$opt_reduce.cc:134:opt_mux$2013 }
    New ctrl vector for $pmux cell $procmux$1310: { $auto$opt_reduce.cc:134:opt_mux$2019 $auto$opt_reduce.cc:134:opt_mux$2017 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1016: { $auto$opt_reduce.cc:134:opt_mux$2023 $auto$opt_reduce.cc:134:opt_mux$2021 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$249: { $procmux$214_CMP $procmux$228_CMP $auto$opt_reduce.cc:134:opt_mux$2025 }
    New ctrl vector for $pmux cell $procmux$686: $auto$opt_reduce.cc:134:opt_mux$2027
    New ctrl vector for $pmux cell $procmux$1688: { $procmux$1010_CMP $auto$opt_reduce.cc:134:opt_mux$2029 }
    New ctrl vector for $pmux cell $procmux$1583: { $auto$opt_reduce.cc:134:opt_mux$2031 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$890: { $procmux$1018_CMP $auto$opt_reduce.cc:134:opt_mux$2033 }
    New ctrl vector for $pmux cell $procmux$270: $auto$opt_reduce.cc:134:opt_mux$2035
    New ctrl vector for $pmux cell $procmux$1415: { $auto$opt_reduce.cc:134:opt_mux$2037 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1142: { $auto$opt_reduce.cc:134:opt_mux$2041 $auto$opt_reduce.cc:134:opt_mux$2039 }
    New ctrl vector for $pmux cell $procmux$1394: { $auto$opt_reduce.cc:134:opt_mux$2045 $auto$opt_reduce.cc:134:opt_mux$2043 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1184: { $auto$opt_reduce.cc:134:opt_mux$2049 $auto$opt_reduce.cc:134:opt_mux$2047 }
    New ctrl vector for $pmux cell $procmux$1121: { $auto$opt_reduce.cc:134:opt_mux$2053 $auto$opt_reduce.cc:134:opt_mux$2051 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$583: $auto$opt_reduce.cc:134:opt_mux$2055
    New ctrl vector for $pmux cell $procmux$911: { $auto$opt_reduce.cc:134:opt_mux$2059 $auto$opt_reduce.cc:134:opt_mux$2057 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1499: { $procmux$1019_CMP $auto$opt_reduce.cc:134:opt_mux$2061 }
    New ctrl vector for $pmux cell $procmux$534: $auto$opt_reduce.cc:134:opt_mux$2063
    New ctrl vector for $pmux cell $procmux$1289: { $auto$opt_reduce.cc:134:opt_mux$2067 $auto$opt_reduce.cc:134:opt_mux$2065 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1205: { $procmux$1006_CMP $auto$opt_reduce.cc:134:opt_mux$2069 }
    New ctrl vector for $pmux cell $procmux$129: $auto$opt_reduce.cc:134:opt_mux$2071
    New ctrl vector for $pmux cell $procmux$1625: { $auto$opt_reduce.cc:134:opt_mux$2073 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1352: { $auto$opt_reduce.cc:134:opt_mux$2075 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$138: $auto$opt_reduce.cc:134:opt_mux$2077
    New ctrl vector for $pmux cell $procmux$932: { $procmux$1011_CMP $auto$opt_reduce.cc:134:opt_mux$2079 }
    New ctrl vector for $pmux cell $procmux$596: { $procmux$214_CMP $auto$opt_reduce.cc:134:opt_mux$2081 }
    New ctrl vector for $pmux cell $procmux$1268: { $auto$opt_reduce.cc:134:opt_mux$2085 $auto$opt_reduce.cc:134:opt_mux$2083 }
    New ctrl vector for $pmux cell $procmux$1562: { $auto$opt_reduce.cc:134:opt_mux$2089 $auto$opt_reduce.cc:134:opt_mux$2087 }
    New ctrl vector for $pmux cell $procmux$1541: { $auto$opt_reduce.cc:134:opt_mux$2093 $auto$opt_reduce.cc:134:opt_mux$2091 }
    New ctrl vector for $pmux cell $procmux$953: { $auto$opt_reduce.cc:134:opt_mux$2097 $auto$opt_reduce.cc:134:opt_mux$2095 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1604: { $auto$opt_reduce.cc:134:opt_mux$2099 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$1079: { $auto$opt_reduce.cc:134:opt_mux$2103 $auto$opt_reduce.cc:134:opt_mux$2101 }
    New ctrl vector for $pmux cell $procmux$497: $auto$opt_reduce.cc:134:opt_mux$2105
    New ctrl vector for $pmux cell $procmux$1723: { $procmux$1711_CMP $procmux$1013_CMP }
    New ctrl vector for $pmux cell $procmux$1457: { $auto$opt_reduce.cc:134:opt_mux$2109 $auto$opt_reduce.cc:134:opt_mux$2107 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$610: { $procmux$214_CMP $auto$opt_reduce.cc:134:opt_mux$2111 }
    New ctrl vector for $pmux cell $procmux$974: { $procmux$1008_CMP $auto$opt_reduce.cc:134:opt_mux$2113 }
    New ctrl vector for $pmux cell $procmux$1667: { $procmux$1000_CMP $auto$opt_reduce.cc:134:opt_mux$2115 }
    New ctrl vector for $pmux cell $procmux$152: $auto$opt_reduce.cc:134:opt_mux$2117
    New ctrl vector for $pmux cell $procmux$1520: { $auto$opt_reduce.cc:134:opt_mux$2121 $auto$opt_reduce.cc:134:opt_mux$2119 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$515: $auto$opt_reduce.cc:134:opt_mux$2123
    New ctrl vector for $pmux cell $procmux$1478: { $auto$opt_reduce.cc:134:opt_mux$2125 $procmux$1017_CMP }
    New ctrl vector for $pmux cell $procmux$995: { $auto$opt_reduce.cc:134:opt_mux$2129 $auto$opt_reduce.cc:134:opt_mux$2127 }
    New ctrl vector for $pmux cell $procmux$1436: { $auto$opt_reduce.cc:134:opt_mux$2133 $auto$opt_reduce.cc:134:opt_mux$2131 }
    New ctrl vector for $pmux cell $procmux$478: $auto$opt_reduce.cc:134:opt_mux$2135
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 60 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
<suppressed ~147 debug messages>
Finding identical cells in module `\Puneh_DP'.
<suppressed ~3 debug messages>
Finding identical cells in module `\Puneh_Top'.
Removed a total of 50 cells.

3.6.6. Executing OPT_DFF pass (perform DFF optimizations).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 0 unused cells and 1155 unused wires.
<suppressed ~2 debug messages>

3.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.6.13. Executing OPT_DFF pass (perform DFF optimizations).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

3.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing FSM pass (extract and optimize FSM).

3.7.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking Puneh_C.pstate as FSM state register:
    Circuit seems to be self-resetting.

3.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

3.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.8. Executing OPT pass (performing simple optimizations).

3.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

3.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

3.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1973 ($adff) from module Puneh_DP (D = \mux_OF_out, Q = \OF_out).
Adding EN signal on $procdff$1972 ($adff) from module Puneh_DP (D = \dataBus, Q = \IR_out).
Adding EN signal on $procdff$1971 ($adff) from module Puneh_DP (D = $0\AC_out[15:0], Q = \AC_out).
Adding EN signal on $procdff$1970 ($adff) from module Puneh_DP (D = \mux_PC_out, Q = \PC_out).
Adding EN signal on $procdff$1969 ($adff) from module Puneh_DP (D = \mux_IN_out, Q = \IN_out).
Adding EN signal on $procdff$1968 ($adff) from module Puneh_DP (D = \mux_flags_out [3], Q = \Z_out1).
Adding EN signal on $procdff$1967 ($adff) from module Puneh_DP (D = \mux_flags_out [2], Q = \N_out1).
Adding EN signal on $procdff$1966 ($adff) from module Puneh_DP (D = \mux_flags_out [1], Q = \C_out1).
Adding EN signal on $procdff$1965 ($adff) from module Puneh_DP (D = \mux_flags_out [0], Q = \V_out1).

3.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 8 unused cells and 8 unused wires.
<suppressed ~9 debug messages>

3.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
<suppressed ~1 debug messages>
Optimizing module Puneh_Top.

3.8.9. Rerunning OPT passes. (Maybe there is more to do..)

3.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

3.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

3.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.8.13. Executing OPT_DFF pass (perform DFF optimizations).

3.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

3.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.8.16. Finished OPT passes. (There is nothing left to do.)

3.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 4) from port B of cell Puneh_C.$procmux$101_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell Puneh_C.$procmux$210_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell Puneh_C.$procmux$211_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell Puneh_C.$procmux$212_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell Puneh_C.$procmux$213_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell Puneh_C.$procmux$214_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell Puneh_C.$procmux$228_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell Puneh_C.$procmux$271_CMP0 ($eq).
Removed top 7 bits (of 8) from port B of cell Puneh_C.$procmux$272_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell Puneh_C.$procmux$292_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell Puneh_C.$procmux$372_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell Puneh_C.$procmux$995 ($pmux).
Removed top 1 bits (of 4) from port B of cell Puneh_C.$procmux$1004_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell Puneh_C.$procmux$1005_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell Puneh_C.$procmux$1006_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell Puneh_C.$procmux$1007_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell Puneh_C.$procmux$1008_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell Puneh_C.$procmux$1009_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell Puneh_C.$procmux$1010_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell Puneh_C.$procmux$1013_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell Puneh_C.$procmux$1723 ($pmux).
Removed top 2 bits (of 4) from FF cell Puneh_C.$procdff$1964 ($adff).
Removed top 2 bits (of 4) from port A of cell Puneh_C.$procmux$101_CMP0 ($eq).
Removed top 2 bits (of 4) from port A of cell Puneh_C.$procmux$1013_CMP0 ($eq).
Removed top 2 bits (of 4) from wire Puneh_C.$2\nstate[3:0].
Removed top 2 bits (of 4) from wire Puneh_C.nstate.
Removed top 3 bits (of 4) from wire Puneh_C.pstate.
Removed top 1 bits (of 2) from port B of cell Puneh_DP.$eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:99$16 ($eq).
Removed top 15 bits (of 16) from port B of cell Puneh_DP.$add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:138$43 ($add).
Removed top 14 bits (of 16) from port B of cell Puneh_DP.$add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:139$44 ($add).
Removed top 15 bits (of 16) from port B of cell Puneh_DP.$add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:152$50 ($add).
Removed cell Puneh_DP.$procmux$1947 ($mux).

3.10. Executing PEEPOPT pass (run peephole optimizers).

3.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

3.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module Puneh_C:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Puneh_DP:
  creating $macc model for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:113$25 ($add).
  creating $macc model for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:138$43 ($add).
  creating $macc model for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:139$44 ($add).
  creating $macc model for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:152$50 ($add).
  creating $macc model for $mul$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:115$26 ($mul).
  creating $alu model for $macc $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:152$50.
  creating $alu model for $macc $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:139$44.
  creating $alu model for $macc $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:138$43.
  creating $alu model for $macc $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:113$25.
  creating $macc cell for $mul$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:115$26: $auto$alumacc.cc:365:replace_macc$2150
  creating $alu cell for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:113$25: $auto$alumacc.cc:485:replace_alu$2151
  creating $alu cell for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:138$43: $auto$alumacc.cc:485:replace_alu$2154
  creating $alu cell for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:139$44: $auto$alumacc.cc:485:replace_alu$2157
  creating $alu cell for $add$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:152$50: $auto$alumacc.cc:485:replace_alu$2160
  created 4 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module Puneh_Top:
  created 0 $alu and 0 $macc cells.

3.13. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module Puneh_DP that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:98$15 ($sshr):
    Found 1 activation_patterns using ctrl signal { $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:97$14_Y \NOT \AND }.
    No candidates found.
  Analyzing resource sharing options for $shr$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:100$17 ($shr):
    Found 1 activation_patterns using ctrl signal { $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:99$16_Y $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:97$14_Y \NOT \AND }.
    No candidates found.
  Analyzing resource sharing options for $shl$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:102$19 ($shl):
    Found 1 activation_patterns using ctrl signal { $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:101$18_Y $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:99$16_Y $eq$/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/Puneh_Top.v:97$14_Y \NOT \AND }.
    No candidates found.

3.14. Executing OPT pass (performing simple optimizations).

3.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

3.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

3.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.14.6. Executing OPT_DFF pass (perform DFF optimizations).

3.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

3.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.14.9. Finished OPT passes. (There is nothing left to do.)

3.15. Executing MEMORY pass.

3.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

3.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

3.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

3.15.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

3.15.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

3.15.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.15.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

3.15.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

3.15.9. Executing MEMORY_COLLECT pass (generating $mem cells).

3.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

3.17. Executing OPT pass (performing simple optimizations).

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
<suppressed ~116 debug messages>
Optimizing module Puneh_DP.
<suppressed ~12 debug messages>
Optimizing module Puneh_Top.

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.17.3. Executing OPT_DFF pass (perform DFF optimizations).

3.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 18 unused cells and 47 unused wires.
<suppressed ~20 debug messages>

3.17.5. Finished fast OPT passes.

3.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

3.19. Executing OPT pass (performing simple optimizations).

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
    Consolidated identical input bits for $mux cell $procmux$478:
      Old ports: A=4'0000, B=4'1111, Y=$4\ldSR[3:0]
      New ports: A=1'0, B=1'1, Y=$4\ldSR[3:0] [0]
      New connections: $4\ldSR[3:0] [3:1] = { $4\ldSR[3:0] [0] $4\ldSR[3:0] [0] $4\ldSR[3:0] [0] }
    Consolidated identical input bits for $mux cell $procmux$995:
      Old ports: A=2'10, B=2'00, Y=$2\nstate[3:0]
      New ports: A=1'1, B=1'0, Y=$2\nstate[3:0] [1]
      New connections: $2\nstate[3:0] [0] = 1'0
  Optimizing cells in module \Puneh_C.
    Consolidated identical input bits for $mux cell $procmux$671:
      Old ports: A=4'0000, B=$4\ldSR[3:0], Y=$3\ldSR[3:0]
      New ports: A=1'0, B=$4\ldSR[3:0] [0], Y=$3\ldSR[3:0] [0]
      New connections: $3\ldSR[3:0] [3:1] = { $3\ldSR[3:0] [0] $3\ldSR[3:0] [0] $3\ldSR[3:0] [0] }
  Optimizing cells in module \Puneh_C.
    Consolidated identical input bits for $pmux cell $procmux$1247:
      Old ports: A=4'1111, B={ 4'0000 $3\ldSR[3:0] }, Y=$2\ldSR[3:0]
      New ports: A=1'1, B={ 1'0 $3\ldSR[3:0] [0] }, Y=$2\ldSR[3:0] [0]
      New connections: $2\ldSR[3:0] [3:1] = { $2\ldSR[3:0] [0] $2\ldSR[3:0] [0] $2\ldSR[3:0] [0] }
  Optimizing cells in module \Puneh_C.
    Consolidated identical input bits for $mux cell $procmux$1729:
      Old ports: A=4'0000, B=$2\ldSR[3:0], Y=\ldSR
      New ports: A=1'0, B=$2\ldSR[3:0] [0], Y=\ldSR [0]
      New connections: \ldSR [3:1] = { \ldSR [0] \ldSR [0] \ldSR [0] }
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 5 changes.

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.19.6. Executing OPT_SHARE pass.

3.19.7. Executing OPT_DFF pass (perform DFF optimizations).

3.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

3.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
<suppressed ~4 debug messages>
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.19.10. Rerunning OPT passes. (Maybe there is more to do..)

3.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

3.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

3.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
<suppressed ~9 debug messages>
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 3 cells.

3.19.14. Executing OPT_SHARE pass.

3.19.15. Executing OPT_DFF pass (perform DFF optimizations).

3.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.19.18. Rerunning OPT passes. (Maybe there is more to do..)

3.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

3.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

3.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

3.19.22. Executing OPT_SHARE pass.

3.19.23. Executing OPT_DFF pass (perform DFF optimizations).

3.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

3.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

3.19.26. Finished OPT passes. (There is nothing left to do.)

3.20. Executing TECHMAP pass (map to technology primitives).

3.20.1. Executing Verilog-2005 frontend: /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/utdate/bin/../share/yosys/techmap.v
Parsing Verilog input from `/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/utdate/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:d38d98c7f121c352e37113a9a1041f7c16bf352c$paramod$c4daa2a351a33d3f62e4ce92e4f2baf3abe55785\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:d38d98c7f121c352e37113a9a1041f7c16bf352c$paramod$02dbae28c9ac2b40a59ca8e36294a63e0f81b019\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:d38d98c7f121c352e37113a9a1041f7c16bf352c$paramod$8a3816d8b9679bdd8c78d4303da30203bba0cb69\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_90_alu for cells of type $alu.
Using template $paramod$081ba1a4a7201ecdb44563d3c3bd7013d1ebf4eb\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$3b7577489eb4433b1d5620cab7f3794743dee5ea\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xnor.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper maccmap for cells of type $macc.
  add \mux_ARU_out [7:0] * \AC_out [7:0] (8x8 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010000 for cells of type $fa.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_90_alu for cells of type $alu.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adff.
No more expansions possible.
<suppressed ~2124 debug messages>

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
<suppressed ~160 debug messages>
Optimizing module Puneh_DP.
<suppressed ~696 debug messages>
Optimizing module Puneh_Top.

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
<suppressed ~903 debug messages>
Finding identical cells in module `\Puneh_DP'.
<suppressed ~480 debug messages>
Finding identical cells in module `\Puneh_Top'.
Removed a total of 461 cells.

3.21.3. Executing OPT_DFF pass (perform DFF optimizations).

3.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 83 unused cells and 944 unused wires.
<suppressed ~85 debug messages>

3.21.5. Finished fast OPT passes.

3.22. Executing ABC pass (technology mapping using ABC).

3.22.1. Extracting gate netlist of module `\Puneh_C' to `<abc-temp-dir>/input.blif'..
Extracted 390 gates and 411 wires to a netlist network with 19 inputs and 42 outputs.

3.22.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        8
ABC RESULTS:            ANDNOT cells:      101
ABC RESULTS:               MUX cells:        7
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:       27
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:      142
ABC RESULTS:             ORNOT cells:       24
ABC RESULTS:        internal signals:      350
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       42
Removing temp directory.

3.22.2. Extracting gate netlist of module `\Puneh_DP' to `<abc-temp-dir>/input.blif'..
Extracted 1232 gates and 1343 wires to a netlist network with 109 inputs and 94 outputs.

3.22.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.22.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       45
ABC RESULTS:            ANDNOT cells:      287
ABC RESULTS:               MUX cells:      409
ABC RESULTS:              NAND cells:       37
ABC RESULTS:               NOR cells:       31
ABC RESULTS:               NOT cells:       98
ABC RESULTS:                OR cells:      149
ABC RESULTS:             ORNOT cells:       42
ABC RESULTS:              XNOR cells:       26
ABC RESULTS:               XOR cells:      175
ABC RESULTS:        internal signals:     1140
ABC RESULTS:           input signals:      109
ABC RESULTS:          output signals:       94
Removing temp directory.

3.22.3. Extracting gate netlist of module `\Puneh_Top' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.23. Executing OPT pass (performing simple optimizations).

3.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
<suppressed ~5 debug messages>
Optimizing module Puneh_DP.
<suppressed ~159 debug messages>
Optimizing module Puneh_Top.

3.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
<suppressed ~3 debug messages>
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 1 cells.

3.23.3. Executing OPT_DFF pass (perform DFF optimizations).

3.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 9 unused cells and 781 unused wires.
<suppressed ~22 debug messages>

3.23.5. Finished fast OPT passes.

3.24. Executing HIERARCHY pass (managing design hierarchy).

3.24.1. Analyzing design hierarchy..
Top module:  \Puneh_Top
Used module:     \Puneh_DP
Used module:     \Puneh_C

3.24.2. Analyzing design hierarchy..
Top module:  \Puneh_Top
Used module:     \Puneh_DP
Used module:     \Puneh_C
Removed 0 unused modules.

3.25. Printing statistics.

=== Puneh_C ===

   Number of wires:                327
   Number of wire bits:            347
   Number of public wires:          47
   Number of public wire bits:      67
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                322
     $_ANDNOT_                     101
     $_AND_                          8
     $_DFF_PP0_                      2
     $_MUX_                          7
     $_NAND_                        10
     $_NOR_                         26
     $_NOT_                          2
     $_ORNOT_                       24
     $_OR_                         142

=== Puneh_DP ===

   Number of wires:               1266
   Number of wire bits:           1495
   Number of public wires:          68
   Number of public wire bits:     282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1362
     $_ANDNOT_                     287
     $_AND_                         45
     $_DFFE_PP0P_                   72
     $_MUX_                        409
     $_NAND_                        37
     $_NOR_                         31
     $_NOT_                         89
     $_ORNOT_                       42
     $_OR_                         149
     $_XNOR_                        26
     $_XOR_                        175

=== Puneh_Top ===

   Number of wires:                 52
   Number of wire bits:            116
   Number of public wires:          52
   Number of public wire bits:     116
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     Puneh_C                         1
     Puneh_DP                        1

=== design hierarchy ===

   Puneh_Top                         1
     Puneh_C                         1
     Puneh_DP                        1

   Number of wires:               1645
   Number of wire bits:           1958
   Number of public wires:         167
   Number of public wire bits:     465
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1684
     $_ANDNOT_                     388
     $_AND_                         53
     $_DFFE_PP0P_                   72
     $_DFF_PP0_                      2
     $_MUX_                        416
     $_NAND_                        47
     $_NOR_                         57
     $_NOT_                         91
     $_ORNOT_                       66
     $_OR_                         291
     $_XNOR_                        26
     $_XOR_                        175

3.26. Executing CHECK pass (checking for obvious problems).
Checking module Puneh_C...
Checking module Puneh_DP...
Checking module Puneh_Top...
Found and reported 0 problems.

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
<suppressed ~15 debug messages>
Optimizing module Puneh_Top.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

4.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7097 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7096
        $abc$6919$auto$blifparse.cc:381:parse_blif$7094

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7104 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7103
        $abc$6919$auto$blifparse.cc:381:parse_blif$7101

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7113 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7112
        $abc$6919$auto$blifparse.cc:381:parse_blif$7109

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7122 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7121
        $abc$6919$auto$blifparse.cc:381:parse_blif$7119

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7131 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7130
        $abc$6919$auto$blifparse.cc:381:parse_blif$7127

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7140 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7139
        $abc$6919$auto$blifparse.cc:381:parse_blif$7137

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7149 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7148
        $abc$6919$auto$blifparse.cc:381:parse_blif$7144

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7158 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7157
        $abc$6919$auto$blifparse.cc:381:parse_blif$7155

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7166 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7165
        $abc$6919$auto$blifparse.cc:381:parse_blif$7162

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7174 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7173
        $abc$6919$auto$blifparse.cc:381:parse_blif$7171

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7183 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7182
        $abc$6919$auto$blifparse.cc:381:parse_blif$7178

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7192 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7191
        $abc$6919$auto$blifparse.cc:381:parse_blif$7189

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7200 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7199
        $abc$6919$auto$blifparse.cc:381:parse_blif$7196

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$6919$auto$blifparse.cc:381:parse_blif$7208 in front of them:
        $abc$6919$auto$blifparse.cc:381:parse_blif$7207
        $abc$6919$auto$blifparse.cc:381:parse_blif$7205

4.7. Executing OPT_DFF pass (perform DFF optimizations).

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

4.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
<suppressed ~14 debug messages>
Optimizing module Puneh_Top.

4.10. Rerunning OPT passes. (Maybe there is more to do..)

4.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

4.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

4.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

4.14. Executing OPT_SHARE pass.

4.15. Executing OPT_DFF pass (perform DFF optimizations).

4.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

4.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

4.18. Rerunning OPT passes. (Maybe there is more to do..)

4.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

4.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

4.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

4.22. Executing OPT_SHARE pass.

4.23. Executing OPT_DFF pass (perform DFF optimizations).

4.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

4.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

4.26. Finished OPT passes. (There is nothing left to do.)

5. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFF_N (noninv, pins=3, area=0.00) is a direct match for cell type $_DFF_N_.
  cell DFF (noninv, pins=3, area=18.00) is a direct match for cell type $_DFF_P_.
  cell DFF_NN0 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_NN0_.
  cell DFF_NN1 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_NN1_.
  cell DFF_NP0 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_NP0_.
  cell DFF_NP1 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_NP1_.
  cell DFF_PN0 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_PN0_.
  cell DFF_PN1 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_PN1_.
  cell DFF_PP0 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_PP0_.
  cell DFF_PP1 (noninv, pins=4, area=0.00) is a direct match for cell type $_DFF_PP1_.
  final dff cell mappings:
    \DFF_N _DFF_N_ (.C( C), .D( D), .Q( Q));
    \DFF _DFF_P_ (.C( C), .D( D), .Q( Q));
    \DFF_NN0 _DFF_NN0_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_NN1 _DFF_NN1_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_NP0 _DFF_NP0_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_NP1 _DFF_NP1_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_PN0 _DFF_PN0_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_PN1 _DFF_PN1_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_PP0 _DFF_PP0_ (.C( C), .D( D), .Q( Q), .R( R));
    \DFF_PP1 _DFF_PP1_ (.C( C), .D( D), .Q( Q), .R( R));
    unmapped dff cell: $_DFFSR_NNN_
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

5.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\Puneh_C':
  mapped 2 $_DFF_PP0_ cells to \DFF_PP0 cells.
Mapping DFF cells in module `\Puneh_DP':
  mapped 72 $_DFF_PP0_ cells to \DFF_PP0 cells.
Mapping DFF cells in module `\Puneh_Top':

6. Executing OPT pass (performing simple optimizations).

6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_C..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Puneh_DP..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_C.
  Optimizing cells in module \Puneh_DP.
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_C'.
Finding identical cells in module `\Puneh_DP'.
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

6.6. Executing OPT_DFF pass (perform DFF optimizations).

6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_C..
Finding unused cells or wires in module \Puneh_DP..
Finding unused cells or wires in module \Puneh_Top..

6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_C.
Optimizing module Puneh_DP.
Optimizing module Puneh_Top.

6.9. Finished OPT passes. (There is nothing left to do.)

7. Executing ABC pass (technology mapping using ABC).

7.1. Extracting gate netlist of module `\Puneh_C' to `<abc-temp-dir>/input.blif'..
Extracted 320 gates and 339 wires to a netlist network with 19 inputs and 41 outputs.

7.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.1.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       91
ABC RESULTS:               NOR cells:      116
ABC RESULTS:               NOT cells:       42
ABC RESULTS:        internal signals:      279
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       41
Removing temp directory.

7.2. Extracting gate netlist of module `\Puneh_DP' to `<abc-temp-dir>/input.blif'..
Extracted 1334 gates and 1469 wires to a netlist network with 135 inputs and 136 outputs.

7.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

7.2.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:     1427
ABC RESULTS:               NOR cells:      915
ABC RESULTS:               NOT cells:      275
ABC RESULTS:        internal signals:     1198
ABC RESULTS:           input signals:      135
ABC RESULTS:          output signals:      136
Removing temp directory.

7.3. Extracting gate netlist of module `\Puneh_Top' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

8. Executing FLATTEN pass (flatten design).
Deleting now unused module Puneh_C.
Deleting now unused module Puneh_DP.
<suppressed ~2 debug messages>

9. Executing OPT pass (performing simple optimizations).

9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

9.6. Executing OPT_DFF pass (perform DFF optimizations).

9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..
Removed 0 unused cells and 1757 unused wires.
<suppressed ~5 debug messages>

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

9.9. Rerunning OPT passes. (Maybe there is more to do..)

9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~14 debug messages>

9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

9.13. Executing OPT_DFF pass (perform DFF optimizations).

9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..

9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

9.16. Finished OPT passes. (There is nothing left to do.)

10. Executing HILOMAP pass (mapping to constant drivers).

11. Executing HILOMAP pass (mapping to constant drivers).

12. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map output port Puneh_Top.addrBus: Missing option -outpad.
Mapping port Puneh_Top.clk using BUF.
Mapping port Puneh_Top.dataBus using BUF.
Don't map output port Puneh_Top.dataBus_out: Missing option -outpad.
Don't map output port Puneh_Top.readMEM: Missing option -outpad.
Mapping port Puneh_Top.rst using BUF.
Don't map output port Puneh_Top.writeMEM: Missing option -outpad.

13. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port Puneh_Top.clk: Missing option -inpad.
Don't map input port Puneh_Top.dataBus: Missing option -inpad.
Don't map input port Puneh_Top.rst: Missing option -inpad.
Mapping port Puneh_Top.addrBus using BUF.
Mapping port Puneh_Top.dataBus_out using BUF.
Mapping port Puneh_Top.readMEM using BUF.
Mapping port Puneh_Top.writeMEM using BUF.

14. Executing SPLITNETS pass (splitting up multi-bit signals).

15. Executing TECHMAP pass (map to technology primitives).

15.1. Executing Verilog-2005 frontend: /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/utdate/bin/../share/yosys/techmap.v
Parsing Verilog input from `/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/utdate/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

15.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~83 debug messages>

16. Executing ABC pass (technology mapping using ABC).

16.1. Extracting gate netlist of module `\Puneh_Top' to `<abc-temp-dir>/input.blif'..
Extracted 14 gates and 43 wires to a netlist network with 29 inputs and 14 outputs.

16.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/mycells_yosys.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Warning: Templates are not defined.
ABC: Libery parser cannot read "time_unit".  Assuming   time_unit : "1ns".
ABC: Libery parser cannot read "capacitive_load_unit". Assuming   capacitive_load_unit(1, pf).
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_N".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_NP1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PN1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP0".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFF_PP1".
ABC: Library "demo" from "/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/mycells_yosys.lib" has 6 cells (10 skipped: 10 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.01 MB. Time =     0.00 sec
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

16.1.2. Re-integrating ABC results.
ABC RESULTS:              NAND cells:       42
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       14
Removing temp directory.

17. Executing OPT pass (performing simple optimizations).

17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

17.6. Executing OPT_DFF pass (perform DFF optimizations).

17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..
Removed 0 unused cells and 95 unused wires.
<suppressed ~1 debug messages>

17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

17.9. Rerunning OPT passes. (Maybe there is more to do..)

17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

17.13. Executing OPT_DFF pass (perform DFF optimizations).

17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..

17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

17.16. Finished OPT passes. (There is nothing left to do.)
Removed 0 unused cells and 204 unused wires.

18. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..

19. Executing Verilog backend.
Dumping module `\Puneh_Top'.

20. Executing BLIF backend.

21. Executing JSON backend.

22. Executing TECHMAP pass (map to technology primitives).

22.1. Executing Verilog-2005 frontend: /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/DFF_map.v
Parsing Verilog input from `/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/DFF_map.v' to AST representation.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFF_N'.
Generating RTLIL representation for module `\DFF_PP0'.
Generating RTLIL representation for module `\DFF_PP1'.
Generating RTLIL representation for module `\DFF_PN0'.
Generating RTLIL representation for module `\DFF_PN1'.
Generating RTLIL representation for module `\DFF_NN0'.
Generating RTLIL representation for module `\DFF_NN1'.
Generating RTLIL representation for module `\DFF_NP0'.
Generating RTLIL representation for module `\DFF_NP1'.
Successfully finished Verilog frontend.

22.2. Continuing TECHMAP pass.
Using template DFF_PP0 for cells of type DFF_PP0.
No more expansions possible.
<suppressed ~86 debug messages>

23. Executing ABC pass (technology mapping using ABC).

23.1. Extracting gate netlist of module `\Puneh_Top' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

24.6. Executing OPT_DFF pass (perform DFF optimizations).

24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..
Removed 0 unused cells and 518 unused wires.
<suppressed ~1 debug messages>

24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

24.9. Rerunning OPT passes. (Maybe there is more to do..)

24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

24.13. Executing OPT_DFF pass (perform DFF optimizations).

24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..

24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

24.16. Finished OPT passes. (There is nothing left to do.)

25. Executing TECHMAP pass (map to technology primitives).

25.1. Executing Verilog-2005 frontend: /Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/Logic_map.v
Parsing Verilog input from `/Users/ebinouri/Documents/UNi/NBGen/pypi_package/test/reza_Puneh/tech/Logic_map.v' to AST representation.
Generating RTLIL representation for module `\BUF'.
Generating RTLIL representation for module `\TIELOM'.
Generating RTLIL representation for module `\TIEHIM'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\NOT'.
Generating RTLIL representation for module `\AND'.
Generating RTLIL representation for module `\NAND'.
Generating RTLIL representation for module `\OR'.
Generating RTLIL representation for module `\NOR'.
Generating RTLIL representation for module `\XOR'.
Generating RTLIL representation for module `\XNOR'.
Successfully finished Verilog frontend.

25.2. Continuing TECHMAP pass.
Using template NOT for cells of type NOT.
Using template NOR for cells of type NOR.
Using template NAND for cells of type NAND.
Using template BUF for cells of type BUF.
No more expansions possible.
<suppressed ~2975 debug messages>

26. Executing OPT pass (performing simple optimizations).

26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

26.6. Executing OPT_DFF pass (perform DFF optimizations).

26.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..
Removed 0 unused cells and 8513 unused wires.
<suppressed ~1 debug messages>

26.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

26.9. Rerunning OPT passes. (Maybe there is more to do..)

26.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Puneh_Top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

26.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Puneh_Top.
Performed a total of 0 changes.

26.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Puneh_Top'.
Removed a total of 0 cells.

26.13. Executing OPT_DFF pass (perform DFF optimizations).

26.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..

26.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Puneh_Top.

26.16. Finished OPT passes. (There is nothing left to do.)

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Puneh_Top..

28. Printing statistics.

=== Puneh_Top ===

   Number of wires:               3082
   Number of wire bits:           3127
   Number of public wires:         176
   Number of public wire bits:     221
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3035
     bufg                           52
     dff                            74
     nand_n                       1560
     nor_n                        1031
     notg                          318

29. Executing Verilog backend.
Dumping module `\Puneh_Top'.

30. Executing JSON backend.

Warnings: 34 unique messages, 34 total
End of script. Logfile hash: 9788af1d8d, CPU: user 24.77s system 0.10s
Yosys 0.10+12 (open-tool-forge build) (git sha1 356ec7bb, clang 11.0.3 )
Time spent: 26% 4x write_verilog (6 sec), 14% 4x techmap (3 sec), ...
