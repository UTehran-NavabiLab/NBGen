/* Generated by Yosys 0.23+25 (git sha1 13e4f343b, x86_64-w64-mingw32-g++ 9.2.1 -Os) */

module MAC(NBART, clk, rst, a, b, d);
  wire CK;
  input NBART;
  wire NBART;
  wire [3:0] R1;
  wire [3:0] R2;
  wire _0_;
  wire _10_;
  wire _11_;
  wire [3:0] _12_;
  wire _1_;
  wire _2_;
  wire _3_;
  wire _4_;
  wire _5_;
  wire _6_;
  wire _7_;
  wire _8_;
  wire _9_;
  wire _MUX0_;
  wire _MUX10_;
  wire _MUX11_;
  wire _MUX1_;
  wire _MUX2_;
  wire _MUX3_;
  wire _MUX4_;
  wire _MUX5_;
  wire _MUX6_;
  wire _MUX7_;
  wire _MUX8_;
  wire _MUX9_;
  input [3:0] a;
  wire [3:0] a;
  input [3:0] b;
  wire [3:0] b;
  input clk;
  wire clk;
  output [3:0] d;
  wire [3:0] d;
  input rst;
  wire rst;
  MUXT M1 (
    .a(clk),
    .b(CK),
    .c(_MUX0_),
    .s(NBART)
  );
  MUXT M10 (
    .a(clk),
    .b(CK),
    .c(_MUX9_),
    .s(NBART)
  );
  MUXT M11 (
    .a(clk),
    .b(CK),
    .c(_MUX10_),
    .s(NBART)
  );
  MUXT M12 (
    .a(clk),
    .b(CK),
    .c(_MUX11_),
    .s(NBART)
  );
  MUXT M2 (
    .a(clk),
    .b(CK),
    .c(_MUX1_),
    .s(NBART)
  );
  MUXT M3 (
    .a(clk),
    .b(CK),
    .c(_MUX2_),
    .s(NBART)
  );
  MUXT M4 (
    .a(clk),
    .b(CK),
    .c(_MUX3_),
    .s(NBART)
  );
  MUXT M5 (
    .a(clk),
    .b(CK),
    .c(_MUX4_),
    .s(NBART)
  );
  MUXT M6 (
    .a(clk),
    .b(CK),
    .c(_MUX5_),
    .s(NBART)
  );
  MUXT M7 (
    .a(clk),
    .b(CK),
    .c(_MUX6_),
    .s(NBART)
  );
  MUXT M8 (
    .a(clk),
    .b(CK),
    .c(_MUX7_),
    .s(NBART)
  );
  MUXT M9 (
    .a(clk),
    .b(CK),
    .c(_MUX8_),
    .s(NBART)
  );
  INVX1 _13_ (
    .A(CK),
    .Y(_0_)
  );
  NAND2X1 _14_ (
    .A(R1[0]),
    .B(R2[0]),
    .Y(_2_)
  );
  XOR2X1 _15_ (
    .A(R1[1]),
    .B(R2[1]),
    .Y(_3_)
  );
  XNOR2X1 _16_ (
    .A(_3_),
    .B(_2_),
    .Y(_12_[1])
  );
  NAND2X1 _17_ (
    .A(R1[1]),
    .B(R2[1]),
    .Y(_4_)
  );
  NOR2X1 _18_ (
    .A(R2[1]),
    .B(R1[1]),
    .Y(_5_)
  );
  OAI21X1 _19_ (
    .A(_5_),
    .B(_2_),
    .C(_4_),
    .Y(_6_)
  );
  XOR2X1 _20_ (
    .A(R1[2]),
    .B(R2[2]),
    .Y(_7_)
  );
  XOR2X1 _21_ (
    .A(_6_),
    .B(_7_),
    .Y(_12_[2])
  );
  AND2X2 _22_ (
    .A(R1[2]),
    .B(R2[2]),
    .Y(_8_)
  );
  AOI21X1 _23_ (
    .A(_7_),
    .B(_6_),
    .C(_8_),
    .Y(_9_)
  );
  XOR2X1 _24_ (
    .A(R1[3]),
    .B(R2[3]),
    .Y(_10_)
  );
  XNOR2X1 _25_ (
    .A(_9_),
    .B(_10_),
    .Y(_12_[3])
  );
  XOR2X1 _26_ (
    .A(R1[0]),
    .B(R2[0]),
    .Y(_11_)
  );
  INVX1 _27_ (
    .A(rst),
    .Y(_1_)
  );
  DFFSR _28_ (
    .CLK(_MUX0_),
    .D(_12_[3]),
    .Q(d[3]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _29_ (
    .CLK(_MUX1_),
    .D(b[0]),
    .Q(R2[0]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _30_ (
    .CLK(_MUX2_),
    .D(b[1]),
    .Q(R2[1]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _31_ (
    .CLK(_MUX3_),
    .D(b[2]),
    .Q(R2[2]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _32_ (
    .CLK(_MUX4_),
    .D(b[3]),
    .Q(R2[3]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _33_ (
    .CLK(_MUX5_),
    .D(a[0]),
    .Q(R1[0]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _34_ (
    .CLK(_MUX6_),
    .D(a[1]),
    .Q(R1[1]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _35_ (
    .CLK(_MUX7_),
    .D(a[2]),
    .Q(R1[2]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _36_ (
    .CLK(_MUX8_),
    .D(a[3]),
    .Q(R1[3]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _37_ (
    .CLK(clk),
    .D(_0_),
    .Q(CK),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _38_ (
    .CLK(_MUX9_),
    .D(_11_),
    .Q(d[0]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _39_ (
    .CLK(_MUX10_),
    .D(_12_[1]),
    .Q(d[1]),
    .R(_1_),
    .S(1'h1)
  );
  DFFSR _40_ (
    .CLK(_MUX11_),
    .D(_12_[2]),
    .Q(d[2]),
    .R(_1_),
    .S(1'h1)
  );
  assign _12_[0] = _11_;
endmodule

module MUXT(a, b, s, c);
  wire _0_;
  wire _1_;
  input a;
  wire a;
  input b;
  wire b;
  output c;
  wire c;
  input s;
  wire s;
  INVX1 _2_ (
    .A(a),
    .Y(_0_)
  );
  NAND2X1 _3_ (
    .A(s),
    .B(b),
    .Y(_1_)
  );
  OAI21X1 _4_ (
    .A(_0_),
    .B(s),
    .C(_1_),
    .Y(c)
  );
endmodule
