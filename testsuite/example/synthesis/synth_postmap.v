/* Generated by Yosys 0.14 (git sha1 UNKNOWN, clang 13.0.0 -fPIC -Os) */

module shiftReg_c17(shiftout, N22, N23, N24, N1, N2, N3, N6, N7, sin, clk, reset);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  input N1;
  wire N1;
  input N2;
  wire N2;
  output N22;
  wire N22;
  output N23;
  wire N23;
  output N24;
  wire N24;
  input N3;
  wire N3;
  input N6;
  wire N6;
  input N7;
  wire N7;
  input clk;
  wire clk;
  wire \inter[0] ;
  wire \inter[1] ;
  wire \inter[2] ;
  wire \inter[3] ;
  wire \inter[4] ;
  wire \inter[5] ;
  wire \inter[6] ;
  wire \inter[7] ;
  input reset;
  wire reset;
  output [7:0] shiftout;
  wire [7:0] shiftout;
  input sin;
  wire sin;
  nand_n #(
    .n(32'sd2),
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _22_ (
    .in({ _08_, _09_ }),
    .out(_02_)
  );
  nand_n #(
    .n(32'sd2),
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _23_ (
    .in({ _05_, _02_ }),
    .out(_03_)
  );
  nand_n #(
    .n(32'sd2),
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _24_ (
    .in({ _08_, _04_ }),
    .out(_00_)
  );
  nand_n #(
    .n(32'sd2),
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _25_ (
    .in({ _03_, _00_ }),
    .out(_06_)
  );
  nand_n #(
    .n(32'sd2),
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _26_ (
    .in({ _10_, _02_ }),
    .out(_01_)
  );
  nand_n #(
    .n(32'sd2),
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _27_ (
    .in({ _03_, _01_ }),
    .out(_07_)
  );
  dff #(
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _28_ (
    .C(_11_),
    .CE(1'h1),
    .CLR(_12_),
    .D(_13_),
    .NbarT(1'h0),
    .PRE(1'h0),
    .Q(\inter[0] ),
    .Si(_14_),
    .global_reset(1'h0)
  );
  dff #(
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _29_ (
    .C(_11_),
    .CE(1'h1),
    .CLR(_12_),
    .D(\inter[0] ),
    .NbarT(1'h0),
    .PRE(1'h0),
    .Q(\inter[1] ),
    .Si(_15_),
    .global_reset(1'h0)
  );
  dff #(
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _30_ (
    .C(_11_),
    .CE(1'h1),
    .CLR(_12_),
    .D(\inter[1] ),
    .NbarT(1'h0),
    .PRE(1'h0),
    .Q(\inter[2] ),
    .Si(_16_),
    .global_reset(1'h0)
  );
  dff #(
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _31_ (
    .C(_11_),
    .CE(1'h1),
    .CLR(_12_),
    .D(\inter[2] ),
    .NbarT(1'h0),
    .PRE(1'h0),
    .Q(\inter[3] ),
    .Si(_17_),
    .global_reset(1'h0)
  );
  dff #(
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _32_ (
    .C(_11_),
    .CE(1'h1),
    .CLR(_12_),
    .D(\inter[3] ),
    .NbarT(1'h0),
    .PRE(1'h0),
    .Q(\inter[4] ),
    .Si(_18_),
    .global_reset(1'h0)
  );
  dff #(
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _33_ (
    .C(_11_),
    .CE(1'h1),
    .CLR(_12_),
    .D(\inter[4] ),
    .NbarT(1'h0),
    .PRE(1'h0),
    .Q(\inter[5] ),
    .Si(_19_),
    .global_reset(1'h0)
  );
  dff #(
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _34_ (
    .C(_11_),
    .CE(1'h1),
    .CLR(_12_),
    .D(\inter[5] ),
    .NbarT(1'h0),
    .PRE(1'h0),
    .Q(\inter[6] ),
    .Si(_20_),
    .global_reset(1'h0)
  );
  dff #(
    .tphl(32'sd0),
    .tplh(32'sd0)
  ) _35_ (
    .C(_11_),
    .CE(1'h1),
    .CLR(_12_),
    .D(\inter[6] ),
    .NbarT(1'h0),
    .PRE(1'h0),
    .Q(\inter[7] ),
    .Si(_21_),
    .global_reset(1'h0)
  );
  pin #(
    .n(32'sd1)
  ) _36_ (
    .in(N1),
    .out(_04_)
  );
  pin #(
    .n(32'sd1)
  ) _37_ (
    .in(N2),
    .out(_05_)
  );
  pout #(
    .n(32'sd1)
  ) _38_ (
    .in(_06_),
    .out(N22)
  );
  pout #(
    .n(32'sd1)
  ) _39_ (
    .in(_07_),
    .out(N23)
  );
  pout #(
    .n(32'sd1)
  ) _40_ (
    .in(_06_),
    .out(N24)
  );
  pin #(
    .n(32'sd1)
  ) _41_ (
    .in(N3),
    .out(_08_)
  );
  pin #(
    .n(32'sd1)
  ) _42_ (
    .in(N6),
    .out(_09_)
  );
  pin #(
    .n(32'sd1)
  ) _43_ (
    .in(N7),
    .out(_10_)
  );
  pin #(
    .n(32'sd1)
  ) _44_ (
    .in(clk),
    .out(_11_)
  );
  pin #(
    .n(32'sd1)
  ) _45_ (
    .in(reset),
    .out(_12_)
  );
  pout #(
    .n(32'sd1)
  ) _46_ (
    .in(\inter[0] ),
    .out(shiftout[0])
  );
  pout #(
    .n(32'sd1)
  ) _47_ (
    .in(\inter[1] ),
    .out(shiftout[1])
  );
  pout #(
    .n(32'sd1)
  ) _48_ (
    .in(\inter[2] ),
    .out(shiftout[2])
  );
  pout #(
    .n(32'sd1)
  ) _49_ (
    .in(\inter[3] ),
    .out(shiftout[3])
  );
  pout #(
    .n(32'sd1)
  ) _50_ (
    .in(\inter[4] ),
    .out(shiftout[4])
  );
  pout #(
    .n(32'sd1)
  ) _51_ (
    .in(\inter[5] ),
    .out(shiftout[5])
  );
  pout #(
    .n(32'sd1)
  ) _52_ (
    .in(\inter[6] ),
    .out(shiftout[6])
  );
  pout #(
    .n(32'sd1)
  ) _53_ (
    .in(\inter[7] ),
    .out(shiftout[7])
  );
  pin #(
    .n(32'sd1)
  ) _54_ (
    .in(sin),
    .out(_13_)
  );
endmodule
