-------------------- TODO list --------------------

sayac scan simulation on systemc


fix multi-file inputs

add option to use existing "fault list" and "test vector"

for fault simulation process:  
    make clock cycle variable by user
    * on [json2sc_testbench->size_Of_Ports] we excluded reset and clock for sizePI
        consider the possibility of designs having no reset
    
report error for each stage properly

why the number of faults generated by Atalanta is different from yours
modules with a name equal to one of the signals would cause error on systemc (see counter example)
te'daade hirarchy vaase fault_list generation mitoone tavasote user moshakhas beshe?

-------------------- Done --------------------
automating fault simulation process:
    + - choose the right "fault-injector" module (based on comb/seq) and copy that in test folder
        check if there is any DFF
    + - automatic testbench Gen (for combinational and seq):
        for seq circuit it's important to know what is the name of clock and reset
        we should order input_ports in way that special pin are always in same order
    + - put them all in one folder and call "make" file
    + - remove "END" line from test vector
    + - copy testVector/fault_list to faultSim folder [and rename them]
    + - input testbench name and faulty_instance 
    + - fix {last_dff_Q_port}
** complete [->so_assignment_method] && dff changes duo to scan insertion
counter scan simulation on systemc
verify systemc vs vhdl
fix atalanta float problem
lenght of test data is not fix: fault injector module : fixed using templated class

sayac Netlist


- fix "utilies_functios" name
-------------------- Notes --------------------
on testbench for counter :
    *[we changed the order of inputs to be compatible with given test vectors]
        in the end changed it back to its normal order

[utilies_functios->rm_float_net,find_clk_rst_netNumber, find_clk_rst_name]: are specific to "abc_my_cells.lib"

synthesising SAYAC Netlist:
    to synthesize netlist of SAYAC: we had to change "dff" description to fit ghdl compilation constraints
    to synthesize SAYAC along with mem and inst_rom: we comment out codes and assign input to output
        produce dff with asynch reset 
            > added "async2sync" to script to convert asynch to normal dff
    > added -fsynopsys to add synoposys library

    - then we observe a bigger problem:
        while trying to synthesis one of our dff, we realized that it produce two sets of DFF {$_DFF_PN0_, _DFFSR_PPP_} just for one of them
            probably because our dff is a complex dff with asynch set and reset
            only after using "async2sync" command we get two set of fully synch DFF {_DFF_P_, _SDFF_PN0_}
    
    - we tried to solve this issue by using "extract" command again
    